Grammar

    0 $accept: pgm $end

    1 $@1: %empty

    2 pgm: $@1 total

    3 total: gdefblock fdeflist mainblock

    4 gdefblock: DECL gdeflist ENDDECL

    5 gdeflist: gdecl gdeflist
    6         | %empty

    7 gdecl: type gidlist ';'

    8 type: INTEGER
    9     | BOOLEAN

   10 gidlist: gid ',' gidlist
   11        | gid

   12 gid: ID

   13 $@2: %empty

   14 gid: ID $@2 '(' arglist ')'
   15    | ID '[' NUM ']'

   16 arglist: argglist
   17        | %empty

   18 argglist: arg argglist
   19         | type argidlist

   20 arg: type argidlist ';'

   21 argidlist: argid ',' argidlist
   22          | argid

   23 argid: ID

   24 fdeflist: fdeflist fdef
   25         | %empty

   26 $@3: %empty

   27 $@4: %empty

   28 fdef: type $@3 ID '(' arglist ')' $@4 '{' ldefblock body '}'

   29 $@5: %empty

   30 mainblock: INTEGER $@5 MAIN '(' ')' '{' ldefblock body '}'

   31 ldefblock: DECL ldeflist ENDDECL

   32 ldeflist: ldecl ldeflist
   33         | %empty

   34 ldecl: type lidlist ';'

   35 lidlist: lid ',' lidlist
   36        | lid

   37 lid: ID

   38 body: BEGINING Slist retstmt END

   39 retstmt: RETURN expr ';'

   40 Slist: Slist Stmt
   41      | Stmt

   42 Stmt: IF '(' expr ')' THEN Slist ENDIF ';'
   43     | IF '(' expr ')' THEN Slist ELSE Slist ENDIF ';'
   44     | WHILE '(' expr ')' DO Slist ENDWHILE ';'
   45     | ID '=' expr ';'
   46     | ID '[' expr ']' '=' expr ';'
   47     | READ '(' ID ')' ';'
   48     | READ '(' ID '[' expr ']' ')' ';'
   49     | WRITE '(' expr ')' ';'

   50 exprlist: exprlist ',' expr
   51         | expr
   52         | %empty

   53 expr: expr '<' expr
   54     | expr '>' expr
   55     | expr EQUAL expr
   56     | expr GE expr
   57     | expr LE expr
   58     | expr NE expr
   59     | expr AND expr
   60     | expr OR expr
   61     | NOT expr
   62     | expr '+' expr
   63     | expr '-' expr
   64     | expr '/' expr
   65     | expr '%' expr
   66     | expr '*' expr
   67     | '(' expr ')'
   68     | ID
   69     | ID '(' exprlist ')'
   70     | ID '[' expr ']'
   71     | NUM
   72     | TRUE
   73     | FALSE


Terminals, with rules where they appear

$end (0) 0
'%' (37) 65
'(' (40) 14 28 30 42 43 44 47 48 49 67 69
')' (41) 14 28 30 42 43 44 47 48 49 67 69
'*' (42) 66
'+' (43) 62
',' (44) 10 21 35 50
'-' (45) 63
'/' (47) 64
';' (59) 7 20 34 39 42 43 44 45 46 47 48 49
'<' (60) 53
'=' (61) 45 46
'>' (62) 54
'[' (91) 15 46 48 70
']' (93) 15 46 48 70
'{' (123) 28 30
'}' (125) 28 30
error (256)
NUM (258) 15 71
ID (259) 12 14 15 23 28 37 45 46 47 48 68 69 70
READ (260) 47 48
WRITE (261) 49
IF (262) 42 43
THEN (263) 42 43
ELSE (264) 43
ENDIF (265) 42 43
WHILE (266) 44
DO (267) 44
ENDWHILE (268) 44
INTEGER (269) 8 30
BOOLEAN (270) 9
DECL (271) 4 31
ENDDECL (272) 4 31
BEGINING (273) 38
END (274) 38
MAIN (275) 30
RETURN (276) 39
EQUAL (277) 55
TRUE (278) 72
FALSE (279) 73
GE (280) 56
LE (281) 57
NE (282) 58
AND (283) 59
OR (284) 60
NOT (285) 61


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
pgm (48)
    on left: 2, on right: 0
$@1 (49)
    on left: 1, on right: 2
total (50)
    on left: 3, on right: 2
gdefblock (51)
    on left: 4, on right: 3
gdeflist (52)
    on left: 5 6, on right: 4 5
gdecl (53)
    on left: 7, on right: 5
type (54)
    on left: 8 9, on right: 7 19 20 28 34
gidlist (55)
    on left: 10 11, on right: 7 10
gid (56)
    on left: 12 14 15, on right: 10 11
$@2 (57)
    on left: 13, on right: 14
arglist (58)
    on left: 16 17, on right: 14 28
argglist (59)
    on left: 18 19, on right: 16 18
arg (60)
    on left: 20, on right: 18
argidlist (61)
    on left: 21 22, on right: 19 20 21
argid (62)
    on left: 23, on right: 21 22
fdeflist (63)
    on left: 24 25, on right: 3 24
fdef (64)
    on left: 28, on right: 24
$@3 (65)
    on left: 26, on right: 28
$@4 (66)
    on left: 27, on right: 28
mainblock (67)
    on left: 30, on right: 3
$@5 (68)
    on left: 29, on right: 30
ldefblock (69)
    on left: 31, on right: 28 30
ldeflist (70)
    on left: 32 33, on right: 31 32
ldecl (71)
    on left: 34, on right: 32
lidlist (72)
    on left: 35 36, on right: 34 35
lid (73)
    on left: 37, on right: 35 36
body (74)
    on left: 38, on right: 28 30
retstmt (75)
    on left: 39, on right: 38
Slist (76)
    on left: 40 41, on right: 38 40 42 43 44
Stmt (77)
    on left: 42 43 44 45 46 47 48 49, on right: 40 41
exprlist (78)
    on left: 50 51 52, on right: 50 69
expr (79)
    on left: 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70
    71 72 73, on right: 39 42 43 44 45 46 48 49 50 51 53 54 55 56 57
    58 59 60 61 62 63 64 65 66 67 70


State 0

    0 $accept: . pgm $end

    $default  reduce using rule 1 ($@1)

    pgm  go to state 1
    $@1  go to state 2


State 1

    0 $accept: pgm . $end

    $end  shift, and go to state 3


State 2

    2 pgm: $@1 . total

    DECL  shift, and go to state 4

    total      go to state 5
    gdefblock  go to state 6


State 3

    0 $accept: pgm $end .

    $default  accept


State 4

    4 gdefblock: DECL . gdeflist ENDDECL

    INTEGER  shift, and go to state 7
    BOOLEAN  shift, and go to state 8

    $default  reduce using rule 6 (gdeflist)

    gdeflist  go to state 9
    gdecl     go to state 10
    type      go to state 11


State 5

    2 pgm: $@1 total .

    $default  reduce using rule 2 (pgm)


State 6

    3 total: gdefblock . fdeflist mainblock

    $default  reduce using rule 25 (fdeflist)

    fdeflist  go to state 12


State 7

    8 type: INTEGER .

    $default  reduce using rule 8 (type)


State 8

    9 type: BOOLEAN .

    $default  reduce using rule 9 (type)


State 9

    4 gdefblock: DECL gdeflist . ENDDECL

    ENDDECL  shift, and go to state 13


State 10

    5 gdeflist: gdecl . gdeflist

    INTEGER  shift, and go to state 7
    BOOLEAN  shift, and go to state 8

    $default  reduce using rule 6 (gdeflist)

    gdeflist  go to state 14
    gdecl     go to state 10
    type      go to state 11


State 11

    7 gdecl: type . gidlist ';'

    ID  shift, and go to state 15

    gidlist  go to state 16
    gid      go to state 17


State 12

    3 total: gdefblock fdeflist . mainblock
   24 fdeflist: fdeflist . fdef

    INTEGER  shift, and go to state 18
    BOOLEAN  shift, and go to state 8

    type       go to state 19
    fdef       go to state 20
    mainblock  go to state 21


State 13

    4 gdefblock: DECL gdeflist ENDDECL .

    $default  reduce using rule 4 (gdefblock)


State 14

    5 gdeflist: gdecl gdeflist .

    $default  reduce using rule 5 (gdeflist)


State 15

   12 gid: ID .
   14    | ID . $@2 '(' arglist ')'
   15    | ID . '[' NUM ']'

    '['  shift, and go to state 22

    '('       reduce using rule 13 ($@2)
    $default  reduce using rule 12 (gid)

    $@2  go to state 23


State 16

    7 gdecl: type gidlist . ';'

    ';'  shift, and go to state 24


State 17

   10 gidlist: gid . ',' gidlist
   11        | gid .

    ','  shift, and go to state 25

    $default  reduce using rule 11 (gidlist)


State 18

    8 type: INTEGER .
   30 mainblock: INTEGER . $@5 MAIN '(' ')' '{' ldefblock body '}'

    MAIN      reduce using rule 29 ($@5)
    $default  reduce using rule 8 (type)

    $@5  go to state 26


State 19

   28 fdef: type . $@3 ID '(' arglist ')' $@4 '{' ldefblock body '}'

    $default  reduce using rule 26 ($@3)

    $@3  go to state 27


State 20

   24 fdeflist: fdeflist fdef .

    $default  reduce using rule 24 (fdeflist)


State 21

    3 total: gdefblock fdeflist mainblock .

    $default  reduce using rule 3 (total)


State 22

   15 gid: ID '[' . NUM ']'

    NUM  shift, and go to state 28


State 23

   14 gid: ID $@2 . '(' arglist ')'

    '('  shift, and go to state 29


State 24

    7 gdecl: type gidlist ';' .

    $default  reduce using rule 7 (gdecl)


State 25

   10 gidlist: gid ',' . gidlist

    ID  shift, and go to state 15

    gidlist  go to state 30
    gid      go to state 17


State 26

   30 mainblock: INTEGER $@5 . MAIN '(' ')' '{' ldefblock body '}'

    MAIN  shift, and go to state 31


State 27

   28 fdef: type $@3 . ID '(' arglist ')' $@4 '{' ldefblock body '}'

    ID  shift, and go to state 32


State 28

   15 gid: ID '[' NUM . ']'

    ']'  shift, and go to state 33


State 29

   14 gid: ID $@2 '(' . arglist ')'

    INTEGER  shift, and go to state 7
    BOOLEAN  shift, and go to state 8

    $default  reduce using rule 17 (arglist)

    type      go to state 34
    arglist   go to state 35
    argglist  go to state 36
    arg       go to state 37


State 30

   10 gidlist: gid ',' gidlist .

    $default  reduce using rule 10 (gidlist)


State 31

   30 mainblock: INTEGER $@5 MAIN . '(' ')' '{' ldefblock body '}'

    '('  shift, and go to state 38


State 32

   28 fdef: type $@3 ID . '(' arglist ')' $@4 '{' ldefblock body '}'

    '('  shift, and go to state 39


State 33

   15 gid: ID '[' NUM ']' .

    $default  reduce using rule 15 (gid)


State 34

   19 argglist: type . argidlist
   20 arg: type . argidlist ';'

    ID  shift, and go to state 40

    argidlist  go to state 41
    argid      go to state 42


State 35

   14 gid: ID $@2 '(' arglist . ')'

    ')'  shift, and go to state 43


State 36

   16 arglist: argglist .

    $default  reduce using rule 16 (arglist)


State 37

   18 argglist: arg . argglist

    INTEGER  shift, and go to state 7
    BOOLEAN  shift, and go to state 8

    type      go to state 34
    argglist  go to state 44
    arg       go to state 37


State 38

   30 mainblock: INTEGER $@5 MAIN '(' . ')' '{' ldefblock body '}'

    ')'  shift, and go to state 45


State 39

   28 fdef: type $@3 ID '(' . arglist ')' $@4 '{' ldefblock body '}'

    INTEGER  shift, and go to state 7
    BOOLEAN  shift, and go to state 8

    $default  reduce using rule 17 (arglist)

    type      go to state 34
    arglist   go to state 46
    argglist  go to state 36
    arg       go to state 37


State 40

   23 argid: ID .

    $default  reduce using rule 23 (argid)


State 41

   19 argglist: type argidlist .
   20 arg: type argidlist . ';'

    ';'  shift, and go to state 47

    $default  reduce using rule 19 (argglist)


State 42

   21 argidlist: argid . ',' argidlist
   22          | argid .

    ','  shift, and go to state 48

    $default  reduce using rule 22 (argidlist)


State 43

   14 gid: ID $@2 '(' arglist ')' .

    $default  reduce using rule 14 (gid)


State 44

   18 argglist: arg argglist .

    $default  reduce using rule 18 (argglist)


State 45

   30 mainblock: INTEGER $@5 MAIN '(' ')' . '{' ldefblock body '}'

    '{'  shift, and go to state 49


State 46

   28 fdef: type $@3 ID '(' arglist . ')' $@4 '{' ldefblock body '}'

    ')'  shift, and go to state 50


State 47

   20 arg: type argidlist ';' .

    $default  reduce using rule 20 (arg)


State 48

   21 argidlist: argid ',' . argidlist

    ID  shift, and go to state 40

    argidlist  go to state 51
    argid      go to state 42


State 49

   30 mainblock: INTEGER $@5 MAIN '(' ')' '{' . ldefblock body '}'

    DECL  shift, and go to state 52

    ldefblock  go to state 53


State 50

   28 fdef: type $@3 ID '(' arglist ')' . $@4 '{' ldefblock body '}'

    $default  reduce using rule 27 ($@4)

    $@4  go to state 54


State 51

   21 argidlist: argid ',' argidlist .

    $default  reduce using rule 21 (argidlist)


State 52

   31 ldefblock: DECL . ldeflist ENDDECL

    INTEGER  shift, and go to state 7
    BOOLEAN  shift, and go to state 8

    $default  reduce using rule 33 (ldeflist)

    type      go to state 55
    ldeflist  go to state 56
    ldecl     go to state 57


State 53

   30 mainblock: INTEGER $@5 MAIN '(' ')' '{' ldefblock . body '}'

    BEGINING  shift, and go to state 58

    body  go to state 59


State 54

   28 fdef: type $@3 ID '(' arglist ')' $@4 . '{' ldefblock body '}'

    '{'  shift, and go to state 60


State 55

   34 ldecl: type . lidlist ';'

    ID  shift, and go to state 61

    lidlist  go to state 62
    lid      go to state 63


State 56

   31 ldefblock: DECL ldeflist . ENDDECL

    ENDDECL  shift, and go to state 64


State 57

   32 ldeflist: ldecl . ldeflist

    INTEGER  shift, and go to state 7
    BOOLEAN  shift, and go to state 8

    $default  reduce using rule 33 (ldeflist)

    type      go to state 55
    ldeflist  go to state 65
    ldecl     go to state 57


State 58

   38 body: BEGINING . Slist retstmt END

    ID     shift, and go to state 66
    READ   shift, and go to state 67
    WRITE  shift, and go to state 68
    IF     shift, and go to state 69
    WHILE  shift, and go to state 70

    Slist  go to state 71
    Stmt   go to state 72


State 59

   30 mainblock: INTEGER $@5 MAIN '(' ')' '{' ldefblock body . '}'

    '}'  shift, and go to state 73


State 60

   28 fdef: type $@3 ID '(' arglist ')' $@4 '{' . ldefblock body '}'

    DECL  shift, and go to state 52

    ldefblock  go to state 74


State 61

   37 lid: ID .

    $default  reduce using rule 37 (lid)


State 62

   34 ldecl: type lidlist . ';'

    ';'  shift, and go to state 75


State 63

   35 lidlist: lid . ',' lidlist
   36        | lid .

    ','  shift, and go to state 76

    $default  reduce using rule 36 (lidlist)


State 64

   31 ldefblock: DECL ldeflist ENDDECL .

    $default  reduce using rule 31 (ldefblock)


State 65

   32 ldeflist: ldecl ldeflist .

    $default  reduce using rule 32 (ldeflist)


State 66

   45 Stmt: ID . '=' expr ';'
   46     | ID . '[' expr ']' '=' expr ';'

    '='  shift, and go to state 77
    '['  shift, and go to state 78


State 67

   47 Stmt: READ . '(' ID ')' ';'
   48     | READ . '(' ID '[' expr ']' ')' ';'

    '('  shift, and go to state 79


State 68

   49 Stmt: WRITE . '(' expr ')' ';'

    '('  shift, and go to state 80


State 69

   42 Stmt: IF . '(' expr ')' THEN Slist ENDIF ';'
   43     | IF . '(' expr ')' THEN Slist ELSE Slist ENDIF ';'

    '('  shift, and go to state 81


State 70

   44 Stmt: WHILE . '(' expr ')' DO Slist ENDWHILE ';'

    '('  shift, and go to state 82


State 71

   38 body: BEGINING Slist . retstmt END
   40 Slist: Slist . Stmt

    ID      shift, and go to state 66
    READ    shift, and go to state 67
    WRITE   shift, and go to state 68
    IF      shift, and go to state 69
    WHILE   shift, and go to state 70
    RETURN  shift, and go to state 83

    retstmt  go to state 84
    Stmt     go to state 85


State 72

   41 Slist: Stmt .

    $default  reduce using rule 41 (Slist)


State 73

   30 mainblock: INTEGER $@5 MAIN '(' ')' '{' ldefblock body '}' .

    $default  reduce using rule 30 (mainblock)


State 74

   28 fdef: type $@3 ID '(' arglist ')' $@4 '{' ldefblock . body '}'

    BEGINING  shift, and go to state 58

    body  go to state 86


State 75

   34 ldecl: type lidlist ';' .

    $default  reduce using rule 34 (ldecl)


State 76

   35 lidlist: lid ',' . lidlist

    ID  shift, and go to state 61

    lidlist  go to state 87
    lid      go to state 63


State 77

   45 Stmt: ID '=' . expr ';'

    NUM    shift, and go to state 88
    ID     shift, and go to state 89
    TRUE   shift, and go to state 90
    FALSE  shift, and go to state 91
    NOT    shift, and go to state 92
    '('    shift, and go to state 93

    expr  go to state 94


State 78

   46 Stmt: ID '[' . expr ']' '=' expr ';'

    NUM    shift, and go to state 88
    ID     shift, and go to state 89
    TRUE   shift, and go to state 90
    FALSE  shift, and go to state 91
    NOT    shift, and go to state 92
    '('    shift, and go to state 93

    expr  go to state 95


State 79

   47 Stmt: READ '(' . ID ')' ';'
   48     | READ '(' . ID '[' expr ']' ')' ';'

    ID  shift, and go to state 96


State 80

   49 Stmt: WRITE '(' . expr ')' ';'

    NUM    shift, and go to state 88
    ID     shift, and go to state 89
    TRUE   shift, and go to state 90
    FALSE  shift, and go to state 91
    NOT    shift, and go to state 92
    '('    shift, and go to state 93

    expr  go to state 97


State 81

   42 Stmt: IF '(' . expr ')' THEN Slist ENDIF ';'
   43     | IF '(' . expr ')' THEN Slist ELSE Slist ENDIF ';'

    NUM    shift, and go to state 88
    ID     shift, and go to state 89
    TRUE   shift, and go to state 90
    FALSE  shift, and go to state 91
    NOT    shift, and go to state 92
    '('    shift, and go to state 93

    expr  go to state 98


State 82

   44 Stmt: WHILE '(' . expr ')' DO Slist ENDWHILE ';'

    NUM    shift, and go to state 88
    ID     shift, and go to state 89
    TRUE   shift, and go to state 90
    FALSE  shift, and go to state 91
    NOT    shift, and go to state 92
    '('    shift, and go to state 93

    expr  go to state 99


State 83

   39 retstmt: RETURN . expr ';'

    NUM    shift, and go to state 88
    ID     shift, and go to state 89
    TRUE   shift, and go to state 90
    FALSE  shift, and go to state 91
    NOT    shift, and go to state 92
    '('    shift, and go to state 93

    expr  go to state 100


State 84

   38 body: BEGINING Slist retstmt . END

    END  shift, and go to state 101


State 85

   40 Slist: Slist Stmt .

    $default  reduce using rule 40 (Slist)


State 86

   28 fdef: type $@3 ID '(' arglist ')' $@4 '{' ldefblock body . '}'

    '}'  shift, and go to state 102


State 87

   35 lidlist: lid ',' lidlist .

    $default  reduce using rule 35 (lidlist)


State 88

   71 expr: NUM .

    $default  reduce using rule 71 (expr)


State 89

   68 expr: ID .
   69     | ID . '(' exprlist ')'
   70     | ID . '[' expr ']'

    '('  shift, and go to state 103
    '['  shift, and go to state 104

    $default  reduce using rule 68 (expr)


State 90

   72 expr: TRUE .

    $default  reduce using rule 72 (expr)


State 91

   73 expr: FALSE .

    $default  reduce using rule 73 (expr)


State 92

   61 expr: NOT . expr

    NUM    shift, and go to state 88
    ID     shift, and go to state 89
    TRUE   shift, and go to state 90
    FALSE  shift, and go to state 91
    NOT    shift, and go to state 92
    '('    shift, and go to state 93

    expr  go to state 105


State 93

   67 expr: '(' . expr ')'

    NUM    shift, and go to state 88
    ID     shift, and go to state 89
    TRUE   shift, and go to state 90
    FALSE  shift, and go to state 91
    NOT    shift, and go to state 92
    '('    shift, and go to state 93

    expr  go to state 106


State 94

   45 Stmt: ID '=' expr . ';'
   53 expr: expr . '<' expr
   54     | expr . '>' expr
   55     | expr . EQUAL expr
   56     | expr . GE expr
   57     | expr . LE expr
   58     | expr . NE expr
   59     | expr . AND expr
   60     | expr . OR expr
   62     | expr . '+' expr
   63     | expr . '-' expr
   64     | expr . '/' expr
   65     | expr . '%' expr
   66     | expr . '*' expr

    EQUAL  shift, and go to state 107
    GE     shift, and go to state 108
    LE     shift, and go to state 109
    NE     shift, and go to state 110
    AND    shift, and go to state 111
    OR     shift, and go to state 112
    '<'    shift, and go to state 113
    '>'    shift, and go to state 114
    '+'    shift, and go to state 115
    '-'    shift, and go to state 116
    '*'    shift, and go to state 117
    '/'    shift, and go to state 118
    '%'    shift, and go to state 119
    ';'    shift, and go to state 120


State 95

   46 Stmt: ID '[' expr . ']' '=' expr ';'
   53 expr: expr . '<' expr
   54     | expr . '>' expr
   55     | expr . EQUAL expr
   56     | expr . GE expr
   57     | expr . LE expr
   58     | expr . NE expr
   59     | expr . AND expr
   60     | expr . OR expr
   62     | expr . '+' expr
   63     | expr . '-' expr
   64     | expr . '/' expr
   65     | expr . '%' expr
   66     | expr . '*' expr

    EQUAL  shift, and go to state 107
    GE     shift, and go to state 108
    LE     shift, and go to state 109
    NE     shift, and go to state 110
    AND    shift, and go to state 111
    OR     shift, and go to state 112
    '<'    shift, and go to state 113
    '>'    shift, and go to state 114
    '+'    shift, and go to state 115
    '-'    shift, and go to state 116
    '*'    shift, and go to state 117
    '/'    shift, and go to state 118
    '%'    shift, and go to state 119
    ']'    shift, and go to state 121


State 96

   47 Stmt: READ '(' ID . ')' ';'
   48     | READ '(' ID . '[' expr ']' ')' ';'

    ')'  shift, and go to state 122
    '['  shift, and go to state 123


State 97

   49 Stmt: WRITE '(' expr . ')' ';'
   53 expr: expr . '<' expr
   54     | expr . '>' expr
   55     | expr . EQUAL expr
   56     | expr . GE expr
   57     | expr . LE expr
   58     | expr . NE expr
   59     | expr . AND expr
   60     | expr . OR expr
   62     | expr . '+' expr
   63     | expr . '-' expr
   64     | expr . '/' expr
   65     | expr . '%' expr
   66     | expr . '*' expr

    EQUAL  shift, and go to state 107
    GE     shift, and go to state 108
    LE     shift, and go to state 109
    NE     shift, and go to state 110
    AND    shift, and go to state 111
    OR     shift, and go to state 112
    '<'    shift, and go to state 113
    '>'    shift, and go to state 114
    '+'    shift, and go to state 115
    '-'    shift, and go to state 116
    '*'    shift, and go to state 117
    '/'    shift, and go to state 118
    '%'    shift, and go to state 119
    ')'    shift, and go to state 124


State 98

   42 Stmt: IF '(' expr . ')' THEN Slist ENDIF ';'
   43     | IF '(' expr . ')' THEN Slist ELSE Slist ENDIF ';'
   53 expr: expr . '<' expr
   54     | expr . '>' expr
   55     | expr . EQUAL expr
   56     | expr . GE expr
   57     | expr . LE expr
   58     | expr . NE expr
   59     | expr . AND expr
   60     | expr . OR expr
   62     | expr . '+' expr
   63     | expr . '-' expr
   64     | expr . '/' expr
   65     | expr . '%' expr
   66     | expr . '*' expr

    EQUAL  shift, and go to state 107
    GE     shift, and go to state 108
    LE     shift, and go to state 109
    NE     shift, and go to state 110
    AND    shift, and go to state 111
    OR     shift, and go to state 112
    '<'    shift, and go to state 113
    '>'    shift, and go to state 114
    '+'    shift, and go to state 115
    '-'    shift, and go to state 116
    '*'    shift, and go to state 117
    '/'    shift, and go to state 118
    '%'    shift, and go to state 119
    ')'    shift, and go to state 125


State 99

   44 Stmt: WHILE '(' expr . ')' DO Slist ENDWHILE ';'
   53 expr: expr . '<' expr
   54     | expr . '>' expr
   55     | expr . EQUAL expr
   56     | expr . GE expr
   57     | expr . LE expr
   58     | expr . NE expr
   59     | expr . AND expr
   60     | expr . OR expr
   62     | expr . '+' expr
   63     | expr . '-' expr
   64     | expr . '/' expr
   65     | expr . '%' expr
   66     | expr . '*' expr

    EQUAL  shift, and go to state 107
    GE     shift, and go to state 108
    LE     shift, and go to state 109
    NE     shift, and go to state 110
    AND    shift, and go to state 111
    OR     shift, and go to state 112
    '<'    shift, and go to state 113
    '>'    shift, and go to state 114
    '+'    shift, and go to state 115
    '-'    shift, and go to state 116
    '*'    shift, and go to state 117
    '/'    shift, and go to state 118
    '%'    shift, and go to state 119
    ')'    shift, and go to state 126


State 100

   39 retstmt: RETURN expr . ';'
   53 expr: expr . '<' expr
   54     | expr . '>' expr
   55     | expr . EQUAL expr
   56     | expr . GE expr
   57     | expr . LE expr
   58     | expr . NE expr
   59     | expr . AND expr
   60     | expr . OR expr
   62     | expr . '+' expr
   63     | expr . '-' expr
   64     | expr . '/' expr
   65     | expr . '%' expr
   66     | expr . '*' expr

    EQUAL  shift, and go to state 107
    GE     shift, and go to state 108
    LE     shift, and go to state 109
    NE     shift, and go to state 110
    AND    shift, and go to state 111
    OR     shift, and go to state 112
    '<'    shift, and go to state 113
    '>'    shift, and go to state 114
    '+'    shift, and go to state 115
    '-'    shift, and go to state 116
    '*'    shift, and go to state 117
    '/'    shift, and go to state 118
    '%'    shift, and go to state 119
    ';'    shift, and go to state 127


State 101

   38 body: BEGINING Slist retstmt END .

    $default  reduce using rule 38 (body)


State 102

   28 fdef: type $@3 ID '(' arglist ')' $@4 '{' ldefblock body '}' .

    $default  reduce using rule 28 (fdef)


State 103

   69 expr: ID '(' . exprlist ')'

    NUM    shift, and go to state 88
    ID     shift, and go to state 89
    TRUE   shift, and go to state 90
    FALSE  shift, and go to state 91
    NOT    shift, and go to state 92
    '('    shift, and go to state 93

    $default  reduce using rule 52 (exprlist)

    exprlist  go to state 128
    expr      go to state 129


State 104

   70 expr: ID '[' . expr ']'

    NUM    shift, and go to state 88
    ID     shift, and go to state 89
    TRUE   shift, and go to state 90
    FALSE  shift, and go to state 91
    NOT    shift, and go to state 92
    '('    shift, and go to state 93

    expr  go to state 130


State 105

   53 expr: expr . '<' expr
   54     | expr . '>' expr
   55     | expr . EQUAL expr
   56     | expr . GE expr
   57     | expr . LE expr
   58     | expr . NE expr
   59     | expr . AND expr
   60     | expr . OR expr
   61     | NOT expr .
   62     | expr . '+' expr
   63     | expr . '-' expr
   64     | expr . '/' expr
   65     | expr . '%' expr
   66     | expr . '*' expr

    $default  reduce using rule 61 (expr)


State 106

   53 expr: expr . '<' expr
   54     | expr . '>' expr
   55     | expr . EQUAL expr
   56     | expr . GE expr
   57     | expr . LE expr
   58     | expr . NE expr
   59     | expr . AND expr
   60     | expr . OR expr
   62     | expr . '+' expr
   63     | expr . '-' expr
   64     | expr . '/' expr
   65     | expr . '%' expr
   66     | expr . '*' expr
   67     | '(' expr . ')'

    EQUAL  shift, and go to state 107
    GE     shift, and go to state 108
    LE     shift, and go to state 109
    NE     shift, and go to state 110
    AND    shift, and go to state 111
    OR     shift, and go to state 112
    '<'    shift, and go to state 113
    '>'    shift, and go to state 114
    '+'    shift, and go to state 115
    '-'    shift, and go to state 116
    '*'    shift, and go to state 117
    '/'    shift, and go to state 118
    '%'    shift, and go to state 119
    ')'    shift, and go to state 131


State 107

   55 expr: expr EQUAL . expr

    NUM    shift, and go to state 88
    ID     shift, and go to state 89
    TRUE   shift, and go to state 90
    FALSE  shift, and go to state 91
    NOT    shift, and go to state 92
    '('    shift, and go to state 93

    expr  go to state 132


State 108

   56 expr: expr GE . expr

    NUM    shift, and go to state 88
    ID     shift, and go to state 89
    TRUE   shift, and go to state 90
    FALSE  shift, and go to state 91
    NOT    shift, and go to state 92
    '('    shift, and go to state 93

    expr  go to state 133


State 109

   57 expr: expr LE . expr

    NUM    shift, and go to state 88
    ID     shift, and go to state 89
    TRUE   shift, and go to state 90
    FALSE  shift, and go to state 91
    NOT    shift, and go to state 92
    '('    shift, and go to state 93

    expr  go to state 134


State 110

   58 expr: expr NE . expr

    NUM    shift, and go to state 88
    ID     shift, and go to state 89
    TRUE   shift, and go to state 90
    FALSE  shift, and go to state 91
    NOT    shift, and go to state 92
    '('    shift, and go to state 93

    expr  go to state 135


State 111

   59 expr: expr AND . expr

    NUM    shift, and go to state 88
    ID     shift, and go to state 89
    TRUE   shift, and go to state 90
    FALSE  shift, and go to state 91
    NOT    shift, and go to state 92
    '('    shift, and go to state 93

    expr  go to state 136


State 112

   60 expr: expr OR . expr

    NUM    shift, and go to state 88
    ID     shift, and go to state 89
    TRUE   shift, and go to state 90
    FALSE  shift, and go to state 91
    NOT    shift, and go to state 92
    '('    shift, and go to state 93

    expr  go to state 137


State 113

   53 expr: expr '<' . expr

    NUM    shift, and go to state 88
    ID     shift, and go to state 89
    TRUE   shift, and go to state 90
    FALSE  shift, and go to state 91
    NOT    shift, and go to state 92
    '('    shift, and go to state 93

    expr  go to state 138


State 114

   54 expr: expr '>' . expr

    NUM    shift, and go to state 88
    ID     shift, and go to state 89
    TRUE   shift, and go to state 90
    FALSE  shift, and go to state 91
    NOT    shift, and go to state 92
    '('    shift, and go to state 93

    expr  go to state 139


State 115

   62 expr: expr '+' . expr

    NUM    shift, and go to state 88
    ID     shift, and go to state 89
    TRUE   shift, and go to state 90
    FALSE  shift, and go to state 91
    NOT    shift, and go to state 92
    '('    shift, and go to state 93

    expr  go to state 140


State 116

   63 expr: expr '-' . expr

    NUM    shift, and go to state 88
    ID     shift, and go to state 89
    TRUE   shift, and go to state 90
    FALSE  shift, and go to state 91
    NOT    shift, and go to state 92
    '('    shift, and go to state 93

    expr  go to state 141


State 117

   66 expr: expr '*' . expr

    NUM    shift, and go to state 88
    ID     shift, and go to state 89
    TRUE   shift, and go to state 90
    FALSE  shift, and go to state 91
    NOT    shift, and go to state 92
    '('    shift, and go to state 93

    expr  go to state 142


State 118

   64 expr: expr '/' . expr

    NUM    shift, and go to state 88
    ID     shift, and go to state 89
    TRUE   shift, and go to state 90
    FALSE  shift, and go to state 91
    NOT    shift, and go to state 92
    '('    shift, and go to state 93

    expr  go to state 143


State 119

   65 expr: expr '%' . expr

    NUM    shift, and go to state 88
    ID     shift, and go to state 89
    TRUE   shift, and go to state 90
    FALSE  shift, and go to state 91
    NOT    shift, and go to state 92
    '('    shift, and go to state 93

    expr  go to state 144


State 120

   45 Stmt: ID '=' expr ';' .

    $default  reduce using rule 45 (Stmt)


State 121

   46 Stmt: ID '[' expr ']' . '=' expr ';'

    '='  shift, and go to state 145


State 122

   47 Stmt: READ '(' ID ')' . ';'

    ';'  shift, and go to state 146


State 123

   48 Stmt: READ '(' ID '[' . expr ']' ')' ';'

    NUM    shift, and go to state 88
    ID     shift, and go to state 89
    TRUE   shift, and go to state 90
    FALSE  shift, and go to state 91
    NOT    shift, and go to state 92
    '('    shift, and go to state 93

    expr  go to state 147


State 124

   49 Stmt: WRITE '(' expr ')' . ';'

    ';'  shift, and go to state 148


State 125

   42 Stmt: IF '(' expr ')' . THEN Slist ENDIF ';'
   43     | IF '(' expr ')' . THEN Slist ELSE Slist ENDIF ';'

    THEN  shift, and go to state 149


State 126

   44 Stmt: WHILE '(' expr ')' . DO Slist ENDWHILE ';'

    DO  shift, and go to state 150


State 127

   39 retstmt: RETURN expr ';' .

    $default  reduce using rule 39 (retstmt)


State 128

   50 exprlist: exprlist . ',' expr
   69 expr: ID '(' exprlist . ')'

    ','  shift, and go to state 151
    ')'  shift, and go to state 152


State 129

   51 exprlist: expr .
   53 expr: expr . '<' expr
   54     | expr . '>' expr
   55     | expr . EQUAL expr
   56     | expr . GE expr
   57     | expr . LE expr
   58     | expr . NE expr
   59     | expr . AND expr
   60     | expr . OR expr
   62     | expr . '+' expr
   63     | expr . '-' expr
   64     | expr . '/' expr
   65     | expr . '%' expr
   66     | expr . '*' expr

    EQUAL  shift, and go to state 107
    GE     shift, and go to state 108
    LE     shift, and go to state 109
    NE     shift, and go to state 110
    AND    shift, and go to state 111
    OR     shift, and go to state 112
    '<'    shift, and go to state 113
    '>'    shift, and go to state 114
    '+'    shift, and go to state 115
    '-'    shift, and go to state 116
    '*'    shift, and go to state 117
    '/'    shift, and go to state 118
    '%'    shift, and go to state 119

    $default  reduce using rule 51 (exprlist)


State 130

   53 expr: expr . '<' expr
   54     | expr . '>' expr
   55     | expr . EQUAL expr
   56     | expr . GE expr
   57     | expr . LE expr
   58     | expr . NE expr
   59     | expr . AND expr
   60     | expr . OR expr
   62     | expr . '+' expr
   63     | expr . '-' expr
   64     | expr . '/' expr
   65     | expr . '%' expr
   66     | expr . '*' expr
   70     | ID '[' expr . ']'

    EQUAL  shift, and go to state 107
    GE     shift, and go to state 108
    LE     shift, and go to state 109
    NE     shift, and go to state 110
    AND    shift, and go to state 111
    OR     shift, and go to state 112
    '<'    shift, and go to state 113
    '>'    shift, and go to state 114
    '+'    shift, and go to state 115
    '-'    shift, and go to state 116
    '*'    shift, and go to state 117
    '/'    shift, and go to state 118
    '%'    shift, and go to state 119
    ']'    shift, and go to state 153


State 131

   67 expr: '(' expr ')' .

    $default  reduce using rule 67 (expr)


State 132

   53 expr: expr . '<' expr
   54     | expr . '>' expr
   55     | expr . EQUAL expr
   55     | expr EQUAL expr .
   56     | expr . GE expr
   57     | expr . LE expr
   58     | expr . NE expr
   59     | expr . AND expr
   60     | expr . OR expr
   62     | expr . '+' expr
   63     | expr . '-' expr
   64     | expr . '/' expr
   65     | expr . '%' expr
   66     | expr . '*' expr

    GE   shift, and go to state 108
    LE   shift, and go to state 109
    '<'  shift, and go to state 113
    '>'  shift, and go to state 114
    '+'  shift, and go to state 115
    '-'  shift, and go to state 116
    '*'  shift, and go to state 117
    '/'  shift, and go to state 118
    '%'  shift, and go to state 119

    $default  reduce using rule 55 (expr)


State 133

   53 expr: expr . '<' expr
   54     | expr . '>' expr
   55     | expr . EQUAL expr
   56     | expr . GE expr
   56     | expr GE expr .
   57     | expr . LE expr
   58     | expr . NE expr
   59     | expr . AND expr
   60     | expr . OR expr
   62     | expr . '+' expr
   63     | expr . '-' expr
   64     | expr . '/' expr
   65     | expr . '%' expr
   66     | expr . '*' expr

    '+'  shift, and go to state 115
    '-'  shift, and go to state 116
    '*'  shift, and go to state 117
    '/'  shift, and go to state 118
    '%'  shift, and go to state 119

    $default  reduce using rule 56 (expr)


State 134

   53 expr: expr . '<' expr
   54     | expr . '>' expr
   55     | expr . EQUAL expr
   56     | expr . GE expr
   57     | expr . LE expr
   57     | expr LE expr .
   58     | expr . NE expr
   59     | expr . AND expr
   60     | expr . OR expr
   62     | expr . '+' expr
   63     | expr . '-' expr
   64     | expr . '/' expr
   65     | expr . '%' expr
   66     | expr . '*' expr

    '+'  shift, and go to state 115
    '-'  shift, and go to state 116
    '*'  shift, and go to state 117
    '/'  shift, and go to state 118
    '%'  shift, and go to state 119

    $default  reduce using rule 57 (expr)


State 135

   53 expr: expr . '<' expr
   54     | expr . '>' expr
   55     | expr . EQUAL expr
   56     | expr . GE expr
   57     | expr . LE expr
   58     | expr . NE expr
   58     | expr NE expr .
   59     | expr . AND expr
   60     | expr . OR expr
   62     | expr . '+' expr
   63     | expr . '-' expr
   64     | expr . '/' expr
   65     | expr . '%' expr
   66     | expr . '*' expr

    GE   shift, and go to state 108
    LE   shift, and go to state 109
    '<'  shift, and go to state 113
    '>'  shift, and go to state 114
    '+'  shift, and go to state 115
    '-'  shift, and go to state 116
    '*'  shift, and go to state 117
    '/'  shift, and go to state 118
    '%'  shift, and go to state 119

    $default  reduce using rule 58 (expr)


State 136

   53 expr: expr . '<' expr
   54     | expr . '>' expr
   55     | expr . EQUAL expr
   56     | expr . GE expr
   57     | expr . LE expr
   58     | expr . NE expr
   59     | expr . AND expr
   59     | expr AND expr .
   60     | expr . OR expr
   62     | expr . '+' expr
   63     | expr . '-' expr
   64     | expr . '/' expr
   65     | expr . '%' expr
   66     | expr . '*' expr

    EQUAL  shift, and go to state 107
    GE     shift, and go to state 108
    LE     shift, and go to state 109
    NE     shift, and go to state 110
    '<'    shift, and go to state 113
    '>'    shift, and go to state 114
    '+'    shift, and go to state 115
    '-'    shift, and go to state 116
    '*'    shift, and go to state 117
    '/'    shift, and go to state 118
    '%'    shift, and go to state 119

    $default  reduce using rule 59 (expr)


State 137

   53 expr: expr . '<' expr
   54     | expr . '>' expr
   55     | expr . EQUAL expr
   56     | expr . GE expr
   57     | expr . LE expr
   58     | expr . NE expr
   59     | expr . AND expr
   60     | expr . OR expr
   60     | expr OR expr .
   62     | expr . '+' expr
   63     | expr . '-' expr
   64     | expr . '/' expr
   65     | expr . '%' expr
   66     | expr . '*' expr

    EQUAL  shift, and go to state 107
    GE     shift, and go to state 108
    LE     shift, and go to state 109
    NE     shift, and go to state 110
    AND    shift, and go to state 111
    '<'    shift, and go to state 113
    '>'    shift, and go to state 114
    '+'    shift, and go to state 115
    '-'    shift, and go to state 116
    '*'    shift, and go to state 117
    '/'    shift, and go to state 118
    '%'    shift, and go to state 119

    $default  reduce using rule 60 (expr)


State 138

   53 expr: expr . '<' expr
   53     | expr '<' expr .
   54     | expr . '>' expr
   55     | expr . EQUAL expr
   56     | expr . GE expr
   57     | expr . LE expr
   58     | expr . NE expr
   59     | expr . AND expr
   60     | expr . OR expr
   62     | expr . '+' expr
   63     | expr . '-' expr
   64     | expr . '/' expr
   65     | expr . '%' expr
   66     | expr . '*' expr

    '+'  shift, and go to state 115
    '-'  shift, and go to state 116
    '*'  shift, and go to state 117
    '/'  shift, and go to state 118
    '%'  shift, and go to state 119

    $default  reduce using rule 53 (expr)


State 139

   53 expr: expr . '<' expr
   54     | expr . '>' expr
   54     | expr '>' expr .
   55     | expr . EQUAL expr
   56     | expr . GE expr
   57     | expr . LE expr
   58     | expr . NE expr
   59     | expr . AND expr
   60     | expr . OR expr
   62     | expr . '+' expr
   63     | expr . '-' expr
   64     | expr . '/' expr
   65     | expr . '%' expr
   66     | expr . '*' expr

    '+'  shift, and go to state 115
    '-'  shift, and go to state 116
    '*'  shift, and go to state 117
    '/'  shift, and go to state 118
    '%'  shift, and go to state 119

    $default  reduce using rule 54 (expr)


State 140

   53 expr: expr . '<' expr
   54     | expr . '>' expr
   55     | expr . EQUAL expr
   56     | expr . GE expr
   57     | expr . LE expr
   58     | expr . NE expr
   59     | expr . AND expr
   60     | expr . OR expr
   62     | expr . '+' expr
   62     | expr '+' expr .
   63     | expr . '-' expr
   64     | expr . '/' expr
   65     | expr . '%' expr
   66     | expr . '*' expr

    '*'  shift, and go to state 117
    '/'  shift, and go to state 118
    '%'  shift, and go to state 119

    $default  reduce using rule 62 (expr)


State 141

   53 expr: expr . '<' expr
   54     | expr . '>' expr
   55     | expr . EQUAL expr
   56     | expr . GE expr
   57     | expr . LE expr
   58     | expr . NE expr
   59     | expr . AND expr
   60     | expr . OR expr
   62     | expr . '+' expr
   63     | expr . '-' expr
   63     | expr '-' expr .
   64     | expr . '/' expr
   65     | expr . '%' expr
   66     | expr . '*' expr

    '*'  shift, and go to state 117
    '/'  shift, and go to state 118
    '%'  shift, and go to state 119

    $default  reduce using rule 63 (expr)


State 142

   53 expr: expr . '<' expr
   54     | expr . '>' expr
   55     | expr . EQUAL expr
   56     | expr . GE expr
   57     | expr . LE expr
   58     | expr . NE expr
   59     | expr . AND expr
   60     | expr . OR expr
   62     | expr . '+' expr
   63     | expr . '-' expr
   64     | expr . '/' expr
   65     | expr . '%' expr
   66     | expr . '*' expr
   66     | expr '*' expr .

    $default  reduce using rule 66 (expr)


State 143

   53 expr: expr . '<' expr
   54     | expr . '>' expr
   55     | expr . EQUAL expr
   56     | expr . GE expr
   57     | expr . LE expr
   58     | expr . NE expr
   59     | expr . AND expr
   60     | expr . OR expr
   62     | expr . '+' expr
   63     | expr . '-' expr
   64     | expr . '/' expr
   64     | expr '/' expr .
   65     | expr . '%' expr
   66     | expr . '*' expr

    $default  reduce using rule 64 (expr)


State 144

   53 expr: expr . '<' expr
   54     | expr . '>' expr
   55     | expr . EQUAL expr
   56     | expr . GE expr
   57     | expr . LE expr
   58     | expr . NE expr
   59     | expr . AND expr
   60     | expr . OR expr
   62     | expr . '+' expr
   63     | expr . '-' expr
   64     | expr . '/' expr
   65     | expr . '%' expr
   65     | expr '%' expr .
   66     | expr . '*' expr

    $default  reduce using rule 65 (expr)


State 145

   46 Stmt: ID '[' expr ']' '=' . expr ';'

    NUM    shift, and go to state 88
    ID     shift, and go to state 89
    TRUE   shift, and go to state 90
    FALSE  shift, and go to state 91
    NOT    shift, and go to state 92
    '('    shift, and go to state 93

    expr  go to state 154


State 146

   47 Stmt: READ '(' ID ')' ';' .

    $default  reduce using rule 47 (Stmt)


State 147

   48 Stmt: READ '(' ID '[' expr . ']' ')' ';'
   53 expr: expr . '<' expr
   54     | expr . '>' expr
   55     | expr . EQUAL expr
   56     | expr . GE expr
   57     | expr . LE expr
   58     | expr . NE expr
   59     | expr . AND expr
   60     | expr . OR expr
   62     | expr . '+' expr
   63     | expr . '-' expr
   64     | expr . '/' expr
   65     | expr . '%' expr
   66     | expr . '*' expr

    EQUAL  shift, and go to state 107
    GE     shift, and go to state 108
    LE     shift, and go to state 109
    NE     shift, and go to state 110
    AND    shift, and go to state 111
    OR     shift, and go to state 112
    '<'    shift, and go to state 113
    '>'    shift, and go to state 114
    '+'    shift, and go to state 115
    '-'    shift, and go to state 116
    '*'    shift, and go to state 117
    '/'    shift, and go to state 118
    '%'    shift, and go to state 119
    ']'    shift, and go to state 155


State 148

   49 Stmt: WRITE '(' expr ')' ';' .

    $default  reduce using rule 49 (Stmt)


State 149

   42 Stmt: IF '(' expr ')' THEN . Slist ENDIF ';'
   43     | IF '(' expr ')' THEN . Slist ELSE Slist ENDIF ';'

    ID     shift, and go to state 66
    READ   shift, and go to state 67
    WRITE  shift, and go to state 68
    IF     shift, and go to state 69
    WHILE  shift, and go to state 70

    Slist  go to state 156
    Stmt   go to state 72


State 150

   44 Stmt: WHILE '(' expr ')' DO . Slist ENDWHILE ';'

    ID     shift, and go to state 66
    READ   shift, and go to state 67
    WRITE  shift, and go to state 68
    IF     shift, and go to state 69
    WHILE  shift, and go to state 70

    Slist  go to state 157
    Stmt   go to state 72


State 151

   50 exprlist: exprlist ',' . expr

    NUM    shift, and go to state 88
    ID     shift, and go to state 89
    TRUE   shift, and go to state 90
    FALSE  shift, and go to state 91
    NOT    shift, and go to state 92
    '('    shift, and go to state 93

    expr  go to state 158


State 152

   69 expr: ID '(' exprlist ')' .

    $default  reduce using rule 69 (expr)


State 153

   70 expr: ID '[' expr ']' .

    $default  reduce using rule 70 (expr)


State 154

   46 Stmt: ID '[' expr ']' '=' expr . ';'
   53 expr: expr . '<' expr
   54     | expr . '>' expr
   55     | expr . EQUAL expr
   56     | expr . GE expr
   57     | expr . LE expr
   58     | expr . NE expr
   59     | expr . AND expr
   60     | expr . OR expr
   62     | expr . '+' expr
   63     | expr . '-' expr
   64     | expr . '/' expr
   65     | expr . '%' expr
   66     | expr . '*' expr

    EQUAL  shift, and go to state 107
    GE     shift, and go to state 108
    LE     shift, and go to state 109
    NE     shift, and go to state 110
    AND    shift, and go to state 111
    OR     shift, and go to state 112
    '<'    shift, and go to state 113
    '>'    shift, and go to state 114
    '+'    shift, and go to state 115
    '-'    shift, and go to state 116
    '*'    shift, and go to state 117
    '/'    shift, and go to state 118
    '%'    shift, and go to state 119
    ';'    shift, and go to state 159


State 155

   48 Stmt: READ '(' ID '[' expr ']' . ')' ';'

    ')'  shift, and go to state 160


State 156

   40 Slist: Slist . Stmt
   42 Stmt: IF '(' expr ')' THEN Slist . ENDIF ';'
   43     | IF '(' expr ')' THEN Slist . ELSE Slist ENDIF ';'

    ID     shift, and go to state 66
    READ   shift, and go to state 67
    WRITE  shift, and go to state 68
    IF     shift, and go to state 69
    ELSE   shift, and go to state 161
    ENDIF  shift, and go to state 162
    WHILE  shift, and go to state 70

    Stmt  go to state 85


State 157

   40 Slist: Slist . Stmt
   44 Stmt: WHILE '(' expr ')' DO Slist . ENDWHILE ';'

    ID        shift, and go to state 66
    READ      shift, and go to state 67
    WRITE     shift, and go to state 68
    IF        shift, and go to state 69
    WHILE     shift, and go to state 70
    ENDWHILE  shift, and go to state 163

    Stmt  go to state 85


State 158

   50 exprlist: exprlist ',' expr .
   53 expr: expr . '<' expr
   54     | expr . '>' expr
   55     | expr . EQUAL expr
   56     | expr . GE expr
   57     | expr . LE expr
   58     | expr . NE expr
   59     | expr . AND expr
   60     | expr . OR expr
   62     | expr . '+' expr
   63     | expr . '-' expr
   64     | expr . '/' expr
   65     | expr . '%' expr
   66     | expr . '*' expr

    EQUAL  shift, and go to state 107
    GE     shift, and go to state 108
    LE     shift, and go to state 109
    NE     shift, and go to state 110
    AND    shift, and go to state 111
    OR     shift, and go to state 112
    '<'    shift, and go to state 113
    '>'    shift, and go to state 114
    '+'    shift, and go to state 115
    '-'    shift, and go to state 116
    '*'    shift, and go to state 117
    '/'    shift, and go to state 118
    '%'    shift, and go to state 119

    $default  reduce using rule 50 (exprlist)


State 159

   46 Stmt: ID '[' expr ']' '=' expr ';' .

    $default  reduce using rule 46 (Stmt)


State 160

   48 Stmt: READ '(' ID '[' expr ']' ')' . ';'

    ';'  shift, and go to state 164


State 161

   43 Stmt: IF '(' expr ')' THEN Slist ELSE . Slist ENDIF ';'

    ID     shift, and go to state 66
    READ   shift, and go to state 67
    WRITE  shift, and go to state 68
    IF     shift, and go to state 69
    WHILE  shift, and go to state 70

    Slist  go to state 165
    Stmt   go to state 72


State 162

   42 Stmt: IF '(' expr ')' THEN Slist ENDIF . ';'

    ';'  shift, and go to state 166


State 163

   44 Stmt: WHILE '(' expr ')' DO Slist ENDWHILE . ';'

    ';'  shift, and go to state 167


State 164

   48 Stmt: READ '(' ID '[' expr ']' ')' ';' .

    $default  reduce using rule 48 (Stmt)


State 165

   40 Slist: Slist . Stmt
   43 Stmt: IF '(' expr ')' THEN Slist ELSE Slist . ENDIF ';'

    ID     shift, and go to state 66
    READ   shift, and go to state 67
    WRITE  shift, and go to state 68
    IF     shift, and go to state 69
    ENDIF  shift, and go to state 168
    WHILE  shift, and go to state 70

    Stmt  go to state 85


State 166

   42 Stmt: IF '(' expr ')' THEN Slist ENDIF ';' .

    $default  reduce using rule 42 (Stmt)


State 167

   44 Stmt: WHILE '(' expr ')' DO Slist ENDWHILE ';' .

    $default  reduce using rule 44 (Stmt)


State 168

   43 Stmt: IF '(' expr ')' THEN Slist ELSE Slist ENDIF . ';'

    ';'  shift, and go to state 169


State 169

   43 Stmt: IF '(' expr ')' THEN Slist ELSE Slist ENDIF ';' .

    $default  reduce using rule 43 (Stmt)
