Grammar

    0 $accept: pgm $end

    1 $@1: %empty

    2 pgm: $@1 total

    3 total: gdefblock fdeflist mainblock

    4 gdefblock: DECL gdeflist ENDDECL

    5 gdeflist: gdecl gdeflist
    6         | %empty

    7 gdecl: type gidlist ';'

    8 type: INTEGER
    9     | BOOLEAN

   10 gidlist: gid ',' gidlist
   11        | gid

   12 gid: ID

   13 $@2: %empty

   14 gid: ID $@2 '(' arglist ')'
   15    | ID '[' NUM ']'

   16 arglist: arg arglist
   17        | type argidlist

   18 arg: type argidlist ';'

   19 argidlist: argid ',' argidlist
   20          | argid

   21 argid: ID

   22 fdeflist: fdeflist fdef
   23         | %empty

   24 $@3: %empty

   25 $@4: %empty

   26 fdef: type $@3 ID '(' arglist ')' $@4 '{' ldefblock body '}'

   27 $@5: %empty

   28 mainblock: INTEGER $@5 MAIN '(' ')' '{' ldefblock body '}'

   29 ldefblock: DECL ldeflist ENDDECL

   30 ldeflist: ldecl ldeflist
   31         | %empty

   32 ldecl: type lidlist ';'

   33 lidlist: lid ',' lidlist
   34        | lid

   35 lid: ID

   36 body: BEGINING Slist retstmt END

   37 retstmt: RETURN expr ';'

   38 Slist: Slist Stmt
   39      | %empty

   40 Stmt: IF '(' expr ')' THEN Slist ENDIF ';'
   41     | IF '(' expr ')' THEN Slist ELSE Slist ENDIF ';'
   42     | WHILE '(' expr ')' DO Slist ENDWHILE ';'
   43     | ID '=' expr ';'
   44     | ID '[' expr ']' '=' expr ';'
   45     | READ '(' ID ')' ';'
   46     | READ '(' ID '[' expr ']' ')' ';'
   47     | WRITE '(' expr ')' ';'

   48 exprlist: exprlist ',' expr
   49         | expr
   50         | %empty

   51 expr: expr '<' expr
   52     | expr '>' expr
   53     | expr EQUAL expr
   54     | expr GE expr
   55     | expr LE expr
   56     | expr NE expr
   57     | expr AND expr
   58     | expr OR expr
   59     | NOT expr
   60     | expr '+' expr
   61     | expr '-' expr
   62     | expr '/' expr
   63     | expr '%' expr
   64     | expr '*' expr
   65     | '(' expr ')'
   66     | ID
   67     | ID '(' exprlist ')'
   68     | ID '[' expr ']'
   69     | NUM
   70     | TRUE
   71     | FALSE


Terminals, with rules where they appear

$end (0) 0
'%' (37) 63
'(' (40) 14 26 28 40 41 42 45 46 47 65 67
')' (41) 14 26 28 40 41 42 45 46 47 65 67
'*' (42) 64
'+' (43) 60
',' (44) 10 19 33 48
'-' (45) 61
'/' (47) 62
';' (59) 7 18 32 37 40 41 42 43 44 45 46 47
'<' (60) 51
'=' (61) 43 44
'>' (62) 52
'[' (91) 15 44 46 68
']' (93) 15 44 46 68
'{' (123) 26 28
'}' (125) 26 28
error (256)
NUM (258) 15 69
ID (259) 12 14 15 21 26 35 43 44 45 46 66 67 68
READ (260) 45 46
WRITE (261) 47
IF (262) 40 41
THEN (263) 40 41
ELSE (264) 41
ENDIF (265) 40 41
WHILE (266) 42
DO (267) 42
ENDWHILE (268) 42
INTEGER (269) 8 28
BOOLEAN (270) 9
DECL (271) 4 29
ENDDECL (272) 4 29
BEGINING (273) 36
END (274) 36
MAIN (275) 28
RETURN (276) 37
EQUAL (277) 53
TRUE (278) 70
FALSE (279) 71
GE (280) 54
LE (281) 55
NE (282) 56
AND (283) 57
OR (284) 58
NOT (285) 59


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
pgm (48)
    on left: 2, on right: 0
$@1 (49)
    on left: 1, on right: 2
total (50)
    on left: 3, on right: 2
gdefblock (51)
    on left: 4, on right: 3
gdeflist (52)
    on left: 5 6, on right: 4 5
gdecl (53)
    on left: 7, on right: 5
type (54)
    on left: 8 9, on right: 7 17 18 26 32
gidlist (55)
    on left: 10 11, on right: 7 10
gid (56)
    on left: 12 14 15, on right: 10 11
$@2 (57)
    on left: 13, on right: 14
arglist (58)
    on left: 16 17, on right: 14 16 26
arg (59)
    on left: 18, on right: 16
argidlist (60)
    on left: 19 20, on right: 17 18 19
argid (61)
    on left: 21, on right: 19 20
fdeflist (62)
    on left: 22 23, on right: 3 22
fdef (63)
    on left: 26, on right: 22
$@3 (64)
    on left: 24, on right: 26
$@4 (65)
    on left: 25, on right: 26
mainblock (66)
    on left: 28, on right: 3
$@5 (67)
    on left: 27, on right: 28
ldefblock (68)
    on left: 29, on right: 26 28
ldeflist (69)
    on left: 30 31, on right: 29 30
ldecl (70)
    on left: 32, on right: 30
lidlist (71)
    on left: 33 34, on right: 32 33
lid (72)
    on left: 35, on right: 33 34
body (73)
    on left: 36, on right: 26 28
retstmt (74)
    on left: 37, on right: 36
Slist (75)
    on left: 38 39, on right: 36 38 40 41 42
Stmt (76)
    on left: 40 41 42 43 44 45 46 47, on right: 38
exprlist (77)
    on left: 48 49 50, on right: 48 67
expr (78)
    on left: 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68
    69 70 71, on right: 37 40 41 42 43 44 46 47 48 49 51 52 53 54 55
    56 57 58 59 60 61 62 63 64 65 68


State 0

    0 $accept: . pgm $end

    $default  reduce using rule 1 ($@1)

    pgm  go to state 1
    $@1  go to state 2


State 1

    0 $accept: pgm . $end

    $end  shift, and go to state 3


State 2

    2 pgm: $@1 . total

    DECL  shift, and go to state 4

    total      go to state 5
    gdefblock  go to state 6


State 3

    0 $accept: pgm $end .

    $default  accept


State 4

    4 gdefblock: DECL . gdeflist ENDDECL

    INTEGER  shift, and go to state 7
    BOOLEAN  shift, and go to state 8

    $default  reduce using rule 6 (gdeflist)

    gdeflist  go to state 9
    gdecl     go to state 10
    type      go to state 11


State 5

    2 pgm: $@1 total .

    $default  reduce using rule 2 (pgm)


State 6

    3 total: gdefblock . fdeflist mainblock

    $default  reduce using rule 23 (fdeflist)

    fdeflist  go to state 12


State 7

    8 type: INTEGER .

    $default  reduce using rule 8 (type)


State 8

    9 type: BOOLEAN .

    $default  reduce using rule 9 (type)


State 9

    4 gdefblock: DECL gdeflist . ENDDECL

    ENDDECL  shift, and go to state 13


State 10

    5 gdeflist: gdecl . gdeflist

    INTEGER  shift, and go to state 7
    BOOLEAN  shift, and go to state 8

    $default  reduce using rule 6 (gdeflist)

    gdeflist  go to state 14
    gdecl     go to state 10
    type      go to state 11


State 11

    7 gdecl: type . gidlist ';'

    ID  shift, and go to state 15

    gidlist  go to state 16
    gid      go to state 17


State 12

    3 total: gdefblock fdeflist . mainblock
   22 fdeflist: fdeflist . fdef

    INTEGER  shift, and go to state 18
    BOOLEAN  shift, and go to state 8

    type       go to state 19
    fdef       go to state 20
    mainblock  go to state 21


State 13

    4 gdefblock: DECL gdeflist ENDDECL .

    $default  reduce using rule 4 (gdefblock)


State 14

    5 gdeflist: gdecl gdeflist .

    $default  reduce using rule 5 (gdeflist)


State 15

   12 gid: ID .
   14    | ID . $@2 '(' arglist ')'
   15    | ID . '[' NUM ']'

    '['  shift, and go to state 22

    '('       reduce using rule 13 ($@2)
    $default  reduce using rule 12 (gid)

    $@2  go to state 23


State 16

    7 gdecl: type gidlist . ';'

    ';'  shift, and go to state 24


State 17

   10 gidlist: gid . ',' gidlist
   11        | gid .

    ','  shift, and go to state 25

    $default  reduce using rule 11 (gidlist)


State 18

    8 type: INTEGER .
   28 mainblock: INTEGER . $@5 MAIN '(' ')' '{' ldefblock body '}'

    MAIN      reduce using rule 27 ($@5)
    $default  reduce using rule 8 (type)

    $@5  go to state 26


State 19

   26 fdef: type . $@3 ID '(' arglist ')' $@4 '{' ldefblock body '}'

    $default  reduce using rule 24 ($@3)

    $@3  go to state 27


State 20

   22 fdeflist: fdeflist fdef .

    $default  reduce using rule 22 (fdeflist)


State 21

    3 total: gdefblock fdeflist mainblock .

    $default  reduce using rule 3 (total)


State 22

   15 gid: ID '[' . NUM ']'

    NUM  shift, and go to state 28


State 23

   14 gid: ID $@2 . '(' arglist ')'

    '('  shift, and go to state 29


State 24

    7 gdecl: type gidlist ';' .

    $default  reduce using rule 7 (gdecl)


State 25

   10 gidlist: gid ',' . gidlist

    ID  shift, and go to state 15

    gidlist  go to state 30
    gid      go to state 17


State 26

   28 mainblock: INTEGER $@5 . MAIN '(' ')' '{' ldefblock body '}'

    MAIN  shift, and go to state 31


State 27

   26 fdef: type $@3 . ID '(' arglist ')' $@4 '{' ldefblock body '}'

    ID  shift, and go to state 32


State 28

   15 gid: ID '[' NUM . ']'

    ']'  shift, and go to state 33


State 29

   14 gid: ID $@2 '(' . arglist ')'

    INTEGER  shift, and go to state 7
    BOOLEAN  shift, and go to state 8

    type     go to state 34
    arglist  go to state 35
    arg      go to state 36


State 30

   10 gidlist: gid ',' gidlist .

    $default  reduce using rule 10 (gidlist)


State 31

   28 mainblock: INTEGER $@5 MAIN . '(' ')' '{' ldefblock body '}'

    '('  shift, and go to state 37


State 32

   26 fdef: type $@3 ID . '(' arglist ')' $@4 '{' ldefblock body '}'

    '('  shift, and go to state 38


State 33

   15 gid: ID '[' NUM ']' .

    $default  reduce using rule 15 (gid)


State 34

   17 arglist: type . argidlist
   18 arg: type . argidlist ';'

    ID  shift, and go to state 39

    argidlist  go to state 40
    argid      go to state 41


State 35

   14 gid: ID $@2 '(' arglist . ')'

    ')'  shift, and go to state 42


State 36

   16 arglist: arg . arglist

    INTEGER  shift, and go to state 7
    BOOLEAN  shift, and go to state 8

    type     go to state 34
    arglist  go to state 43
    arg      go to state 36


State 37

   28 mainblock: INTEGER $@5 MAIN '(' . ')' '{' ldefblock body '}'

    ')'  shift, and go to state 44


State 38

   26 fdef: type $@3 ID '(' . arglist ')' $@4 '{' ldefblock body '}'

    INTEGER  shift, and go to state 7
    BOOLEAN  shift, and go to state 8

    type     go to state 34
    arglist  go to state 45
    arg      go to state 36


State 39

   21 argid: ID .

    $default  reduce using rule 21 (argid)


State 40

   17 arglist: type argidlist .
   18 arg: type argidlist . ';'

    ';'  shift, and go to state 46

    $default  reduce using rule 17 (arglist)


State 41

   19 argidlist: argid . ',' argidlist
   20          | argid .

    ','  shift, and go to state 47

    $default  reduce using rule 20 (argidlist)


State 42

   14 gid: ID $@2 '(' arglist ')' .

    $default  reduce using rule 14 (gid)


State 43

   16 arglist: arg arglist .

    $default  reduce using rule 16 (arglist)


State 44

   28 mainblock: INTEGER $@5 MAIN '(' ')' . '{' ldefblock body '}'

    '{'  shift, and go to state 48


State 45

   26 fdef: type $@3 ID '(' arglist . ')' $@4 '{' ldefblock body '}'

    ')'  shift, and go to state 49


State 46

   18 arg: type argidlist ';' .

    $default  reduce using rule 18 (arg)


State 47

   19 argidlist: argid ',' . argidlist

    ID  shift, and go to state 39

    argidlist  go to state 50
    argid      go to state 41


State 48

   28 mainblock: INTEGER $@5 MAIN '(' ')' '{' . ldefblock body '}'

    DECL  shift, and go to state 51

    ldefblock  go to state 52


State 49

   26 fdef: type $@3 ID '(' arglist ')' . $@4 '{' ldefblock body '}'

    $default  reduce using rule 25 ($@4)

    $@4  go to state 53


State 50

   19 argidlist: argid ',' argidlist .

    $default  reduce using rule 19 (argidlist)


State 51

   29 ldefblock: DECL . ldeflist ENDDECL

    INTEGER  shift, and go to state 7
    BOOLEAN  shift, and go to state 8

    $default  reduce using rule 31 (ldeflist)

    type      go to state 54
    ldeflist  go to state 55
    ldecl     go to state 56


State 52

   28 mainblock: INTEGER $@5 MAIN '(' ')' '{' ldefblock . body '}'

    BEGINING  shift, and go to state 57

    body  go to state 58


State 53

   26 fdef: type $@3 ID '(' arglist ')' $@4 . '{' ldefblock body '}'

    '{'  shift, and go to state 59


State 54

   32 ldecl: type . lidlist ';'

    ID  shift, and go to state 60

    lidlist  go to state 61
    lid      go to state 62


State 55

   29 ldefblock: DECL ldeflist . ENDDECL

    ENDDECL  shift, and go to state 63


State 56

   30 ldeflist: ldecl . ldeflist

    INTEGER  shift, and go to state 7
    BOOLEAN  shift, and go to state 8

    $default  reduce using rule 31 (ldeflist)

    type      go to state 54
    ldeflist  go to state 64
    ldecl     go to state 56


State 57

   36 body: BEGINING . Slist retstmt END

    $default  reduce using rule 39 (Slist)

    Slist  go to state 65


State 58

   28 mainblock: INTEGER $@5 MAIN '(' ')' '{' ldefblock body . '}'

    '}'  shift, and go to state 66


State 59

   26 fdef: type $@3 ID '(' arglist ')' $@4 '{' . ldefblock body '}'

    DECL  shift, and go to state 51

    ldefblock  go to state 67


State 60

   35 lid: ID .

    $default  reduce using rule 35 (lid)


State 61

   32 ldecl: type lidlist . ';'

    ';'  shift, and go to state 68


State 62

   33 lidlist: lid . ',' lidlist
   34        | lid .

    ','  shift, and go to state 69

    $default  reduce using rule 34 (lidlist)


State 63

   29 ldefblock: DECL ldeflist ENDDECL .

    $default  reduce using rule 29 (ldefblock)


State 64

   30 ldeflist: ldecl ldeflist .

    $default  reduce using rule 30 (ldeflist)


State 65

   36 body: BEGINING Slist . retstmt END
   38 Slist: Slist . Stmt

    ID      shift, and go to state 70
    READ    shift, and go to state 71
    WRITE   shift, and go to state 72
    IF      shift, and go to state 73
    WHILE   shift, and go to state 74
    RETURN  shift, and go to state 75

    retstmt  go to state 76
    Stmt     go to state 77


State 66

   28 mainblock: INTEGER $@5 MAIN '(' ')' '{' ldefblock body '}' .

    $default  reduce using rule 28 (mainblock)


State 67

   26 fdef: type $@3 ID '(' arglist ')' $@4 '{' ldefblock . body '}'

    BEGINING  shift, and go to state 57

    body  go to state 78


State 68

   32 ldecl: type lidlist ';' .

    $default  reduce using rule 32 (ldecl)


State 69

   33 lidlist: lid ',' . lidlist

    ID  shift, and go to state 60

    lidlist  go to state 79
    lid      go to state 62


State 70

   43 Stmt: ID . '=' expr ';'
   44     | ID . '[' expr ']' '=' expr ';'

    '='  shift, and go to state 80
    '['  shift, and go to state 81


State 71

   45 Stmt: READ . '(' ID ')' ';'
   46     | READ . '(' ID '[' expr ']' ')' ';'

    '('  shift, and go to state 82


State 72

   47 Stmt: WRITE . '(' expr ')' ';'

    '('  shift, and go to state 83


State 73

   40 Stmt: IF . '(' expr ')' THEN Slist ENDIF ';'
   41     | IF . '(' expr ')' THEN Slist ELSE Slist ENDIF ';'

    '('  shift, and go to state 84


State 74

   42 Stmt: WHILE . '(' expr ')' DO Slist ENDWHILE ';'

    '('  shift, and go to state 85


State 75

   37 retstmt: RETURN . expr ';'

    NUM    shift, and go to state 86
    ID     shift, and go to state 87
    TRUE   shift, and go to state 88
    FALSE  shift, and go to state 89
    NOT    shift, and go to state 90
    '('    shift, and go to state 91

    expr  go to state 92


State 76

   36 body: BEGINING Slist retstmt . END

    END  shift, and go to state 93


State 77

   38 Slist: Slist Stmt .

    $default  reduce using rule 38 (Slist)


State 78

   26 fdef: type $@3 ID '(' arglist ')' $@4 '{' ldefblock body . '}'

    '}'  shift, and go to state 94


State 79

   33 lidlist: lid ',' lidlist .

    $default  reduce using rule 33 (lidlist)


State 80

   43 Stmt: ID '=' . expr ';'

    NUM    shift, and go to state 86
    ID     shift, and go to state 87
    TRUE   shift, and go to state 88
    FALSE  shift, and go to state 89
    NOT    shift, and go to state 90
    '('    shift, and go to state 91

    expr  go to state 95


State 81

   44 Stmt: ID '[' . expr ']' '=' expr ';'

    NUM    shift, and go to state 86
    ID     shift, and go to state 87
    TRUE   shift, and go to state 88
    FALSE  shift, and go to state 89
    NOT    shift, and go to state 90
    '('    shift, and go to state 91

    expr  go to state 96


State 82

   45 Stmt: READ '(' . ID ')' ';'
   46     | READ '(' . ID '[' expr ']' ')' ';'

    ID  shift, and go to state 97


State 83

   47 Stmt: WRITE '(' . expr ')' ';'

    NUM    shift, and go to state 86
    ID     shift, and go to state 87
    TRUE   shift, and go to state 88
    FALSE  shift, and go to state 89
    NOT    shift, and go to state 90
    '('    shift, and go to state 91

    expr  go to state 98


State 84

   40 Stmt: IF '(' . expr ')' THEN Slist ENDIF ';'
   41     | IF '(' . expr ')' THEN Slist ELSE Slist ENDIF ';'

    NUM    shift, and go to state 86
    ID     shift, and go to state 87
    TRUE   shift, and go to state 88
    FALSE  shift, and go to state 89
    NOT    shift, and go to state 90
    '('    shift, and go to state 91

    expr  go to state 99


State 85

   42 Stmt: WHILE '(' . expr ')' DO Slist ENDWHILE ';'

    NUM    shift, and go to state 86
    ID     shift, and go to state 87
    TRUE   shift, and go to state 88
    FALSE  shift, and go to state 89
    NOT    shift, and go to state 90
    '('    shift, and go to state 91

    expr  go to state 100


State 86

   69 expr: NUM .

    $default  reduce using rule 69 (expr)


State 87

   66 expr: ID .
   67     | ID . '(' exprlist ')'
   68     | ID . '[' expr ']'

    '('  shift, and go to state 101
    '['  shift, and go to state 102

    $default  reduce using rule 66 (expr)


State 88

   70 expr: TRUE .

    $default  reduce using rule 70 (expr)


State 89

   71 expr: FALSE .

    $default  reduce using rule 71 (expr)


State 90

   59 expr: NOT . expr

    NUM    shift, and go to state 86
    ID     shift, and go to state 87
    TRUE   shift, and go to state 88
    FALSE  shift, and go to state 89
    NOT    shift, and go to state 90
    '('    shift, and go to state 91

    expr  go to state 103


State 91

   65 expr: '(' . expr ')'

    NUM    shift, and go to state 86
    ID     shift, and go to state 87
    TRUE   shift, and go to state 88
    FALSE  shift, and go to state 89
    NOT    shift, and go to state 90
    '('    shift, and go to state 91

    expr  go to state 104


State 92

   37 retstmt: RETURN expr . ';'
   51 expr: expr . '<' expr
   52     | expr . '>' expr
   53     | expr . EQUAL expr
   54     | expr . GE expr
   55     | expr . LE expr
   56     | expr . NE expr
   57     | expr . AND expr
   58     | expr . OR expr
   60     | expr . '+' expr
   61     | expr . '-' expr
   62     | expr . '/' expr
   63     | expr . '%' expr
   64     | expr . '*' expr

    EQUAL  shift, and go to state 105
    GE     shift, and go to state 106
    LE     shift, and go to state 107
    NE     shift, and go to state 108
    AND    shift, and go to state 109
    OR     shift, and go to state 110
    '<'    shift, and go to state 111
    '>'    shift, and go to state 112
    '+'    shift, and go to state 113
    '-'    shift, and go to state 114
    '*'    shift, and go to state 115
    '/'    shift, and go to state 116
    '%'    shift, and go to state 117
    ';'    shift, and go to state 118


State 93

   36 body: BEGINING Slist retstmt END .

    $default  reduce using rule 36 (body)


State 94

   26 fdef: type $@3 ID '(' arglist ')' $@4 '{' ldefblock body '}' .

    $default  reduce using rule 26 (fdef)


State 95

   43 Stmt: ID '=' expr . ';'
   51 expr: expr . '<' expr
   52     | expr . '>' expr
   53     | expr . EQUAL expr
   54     | expr . GE expr
   55     | expr . LE expr
   56     | expr . NE expr
   57     | expr . AND expr
   58     | expr . OR expr
   60     | expr . '+' expr
   61     | expr . '-' expr
   62     | expr . '/' expr
   63     | expr . '%' expr
   64     | expr . '*' expr

    EQUAL  shift, and go to state 105
    GE     shift, and go to state 106
    LE     shift, and go to state 107
    NE     shift, and go to state 108
    AND    shift, and go to state 109
    OR     shift, and go to state 110
    '<'    shift, and go to state 111
    '>'    shift, and go to state 112
    '+'    shift, and go to state 113
    '-'    shift, and go to state 114
    '*'    shift, and go to state 115
    '/'    shift, and go to state 116
    '%'    shift, and go to state 117
    ';'    shift, and go to state 119


State 96

   44 Stmt: ID '[' expr . ']' '=' expr ';'
   51 expr: expr . '<' expr
   52     | expr . '>' expr
   53     | expr . EQUAL expr
   54     | expr . GE expr
   55     | expr . LE expr
   56     | expr . NE expr
   57     | expr . AND expr
   58     | expr . OR expr
   60     | expr . '+' expr
   61     | expr . '-' expr
   62     | expr . '/' expr
   63     | expr . '%' expr
   64     | expr . '*' expr

    EQUAL  shift, and go to state 105
    GE     shift, and go to state 106
    LE     shift, and go to state 107
    NE     shift, and go to state 108
    AND    shift, and go to state 109
    OR     shift, and go to state 110
    '<'    shift, and go to state 111
    '>'    shift, and go to state 112
    '+'    shift, and go to state 113
    '-'    shift, and go to state 114
    '*'    shift, and go to state 115
    '/'    shift, and go to state 116
    '%'    shift, and go to state 117
    ']'    shift, and go to state 120


State 97

   45 Stmt: READ '(' ID . ')' ';'
   46     | READ '(' ID . '[' expr ']' ')' ';'

    ')'  shift, and go to state 121
    '['  shift, and go to state 122


State 98

   47 Stmt: WRITE '(' expr . ')' ';'
   51 expr: expr . '<' expr
   52     | expr . '>' expr
   53     | expr . EQUAL expr
   54     | expr . GE expr
   55     | expr . LE expr
   56     | expr . NE expr
   57     | expr . AND expr
   58     | expr . OR expr
   60     | expr . '+' expr
   61     | expr . '-' expr
   62     | expr . '/' expr
   63     | expr . '%' expr
   64     | expr . '*' expr

    EQUAL  shift, and go to state 105
    GE     shift, and go to state 106
    LE     shift, and go to state 107
    NE     shift, and go to state 108
    AND    shift, and go to state 109
    OR     shift, and go to state 110
    '<'    shift, and go to state 111
    '>'    shift, and go to state 112
    '+'    shift, and go to state 113
    '-'    shift, and go to state 114
    '*'    shift, and go to state 115
    '/'    shift, and go to state 116
    '%'    shift, and go to state 117
    ')'    shift, and go to state 123


State 99

   40 Stmt: IF '(' expr . ')' THEN Slist ENDIF ';'
   41     | IF '(' expr . ')' THEN Slist ELSE Slist ENDIF ';'
   51 expr: expr . '<' expr
   52     | expr . '>' expr
   53     | expr . EQUAL expr
   54     | expr . GE expr
   55     | expr . LE expr
   56     | expr . NE expr
   57     | expr . AND expr
   58     | expr . OR expr
   60     | expr . '+' expr
   61     | expr . '-' expr
   62     | expr . '/' expr
   63     | expr . '%' expr
   64     | expr . '*' expr

    EQUAL  shift, and go to state 105
    GE     shift, and go to state 106
    LE     shift, and go to state 107
    NE     shift, and go to state 108
    AND    shift, and go to state 109
    OR     shift, and go to state 110
    '<'    shift, and go to state 111
    '>'    shift, and go to state 112
    '+'    shift, and go to state 113
    '-'    shift, and go to state 114
    '*'    shift, and go to state 115
    '/'    shift, and go to state 116
    '%'    shift, and go to state 117
    ')'    shift, and go to state 124


State 100

   42 Stmt: WHILE '(' expr . ')' DO Slist ENDWHILE ';'
   51 expr: expr . '<' expr
   52     | expr . '>' expr
   53     | expr . EQUAL expr
   54     | expr . GE expr
   55     | expr . LE expr
   56     | expr . NE expr
   57     | expr . AND expr
   58     | expr . OR expr
   60     | expr . '+' expr
   61     | expr . '-' expr
   62     | expr . '/' expr
   63     | expr . '%' expr
   64     | expr . '*' expr

    EQUAL  shift, and go to state 105
    GE     shift, and go to state 106
    LE     shift, and go to state 107
    NE     shift, and go to state 108
    AND    shift, and go to state 109
    OR     shift, and go to state 110
    '<'    shift, and go to state 111
    '>'    shift, and go to state 112
    '+'    shift, and go to state 113
    '-'    shift, and go to state 114
    '*'    shift, and go to state 115
    '/'    shift, and go to state 116
    '%'    shift, and go to state 117
    ')'    shift, and go to state 125


State 101

   67 expr: ID '(' . exprlist ')'

    NUM    shift, and go to state 86
    ID     shift, and go to state 87
    TRUE   shift, and go to state 88
    FALSE  shift, and go to state 89
    NOT    shift, and go to state 90
    '('    shift, and go to state 91

    $default  reduce using rule 50 (exprlist)

    exprlist  go to state 126
    expr      go to state 127


State 102

   68 expr: ID '[' . expr ']'

    NUM    shift, and go to state 86
    ID     shift, and go to state 87
    TRUE   shift, and go to state 88
    FALSE  shift, and go to state 89
    NOT    shift, and go to state 90
    '('    shift, and go to state 91

    expr  go to state 128


State 103

   51 expr: expr . '<' expr
   52     | expr . '>' expr
   53     | expr . EQUAL expr
   54     | expr . GE expr
   55     | expr . LE expr
   56     | expr . NE expr
   57     | expr . AND expr
   58     | expr . OR expr
   59     | NOT expr .
   60     | expr . '+' expr
   61     | expr . '-' expr
   62     | expr . '/' expr
   63     | expr . '%' expr
   64     | expr . '*' expr

    $default  reduce using rule 59 (expr)


State 104

   51 expr: expr . '<' expr
   52     | expr . '>' expr
   53     | expr . EQUAL expr
   54     | expr . GE expr
   55     | expr . LE expr
   56     | expr . NE expr
   57     | expr . AND expr
   58     | expr . OR expr
   60     | expr . '+' expr
   61     | expr . '-' expr
   62     | expr . '/' expr
   63     | expr . '%' expr
   64     | expr . '*' expr
   65     | '(' expr . ')'

    EQUAL  shift, and go to state 105
    GE     shift, and go to state 106
    LE     shift, and go to state 107
    NE     shift, and go to state 108
    AND    shift, and go to state 109
    OR     shift, and go to state 110
    '<'    shift, and go to state 111
    '>'    shift, and go to state 112
    '+'    shift, and go to state 113
    '-'    shift, and go to state 114
    '*'    shift, and go to state 115
    '/'    shift, and go to state 116
    '%'    shift, and go to state 117
    ')'    shift, and go to state 129


State 105

   53 expr: expr EQUAL . expr

    NUM    shift, and go to state 86
    ID     shift, and go to state 87
    TRUE   shift, and go to state 88
    FALSE  shift, and go to state 89
    NOT    shift, and go to state 90
    '('    shift, and go to state 91

    expr  go to state 130


State 106

   54 expr: expr GE . expr

    NUM    shift, and go to state 86
    ID     shift, and go to state 87
    TRUE   shift, and go to state 88
    FALSE  shift, and go to state 89
    NOT    shift, and go to state 90
    '('    shift, and go to state 91

    expr  go to state 131


State 107

   55 expr: expr LE . expr

    NUM    shift, and go to state 86
    ID     shift, and go to state 87
    TRUE   shift, and go to state 88
    FALSE  shift, and go to state 89
    NOT    shift, and go to state 90
    '('    shift, and go to state 91

    expr  go to state 132


State 108

   56 expr: expr NE . expr

    NUM    shift, and go to state 86
    ID     shift, and go to state 87
    TRUE   shift, and go to state 88
    FALSE  shift, and go to state 89
    NOT    shift, and go to state 90
    '('    shift, and go to state 91

    expr  go to state 133


State 109

   57 expr: expr AND . expr

    NUM    shift, and go to state 86
    ID     shift, and go to state 87
    TRUE   shift, and go to state 88
    FALSE  shift, and go to state 89
    NOT    shift, and go to state 90
    '('    shift, and go to state 91

    expr  go to state 134


State 110

   58 expr: expr OR . expr

    NUM    shift, and go to state 86
    ID     shift, and go to state 87
    TRUE   shift, and go to state 88
    FALSE  shift, and go to state 89
    NOT    shift, and go to state 90
    '('    shift, and go to state 91

    expr  go to state 135


State 111

   51 expr: expr '<' . expr

    NUM    shift, and go to state 86
    ID     shift, and go to state 87
    TRUE   shift, and go to state 88
    FALSE  shift, and go to state 89
    NOT    shift, and go to state 90
    '('    shift, and go to state 91

    expr  go to state 136


State 112

   52 expr: expr '>' . expr

    NUM    shift, and go to state 86
    ID     shift, and go to state 87
    TRUE   shift, and go to state 88
    FALSE  shift, and go to state 89
    NOT    shift, and go to state 90
    '('    shift, and go to state 91

    expr  go to state 137


State 113

   60 expr: expr '+' . expr

    NUM    shift, and go to state 86
    ID     shift, and go to state 87
    TRUE   shift, and go to state 88
    FALSE  shift, and go to state 89
    NOT    shift, and go to state 90
    '('    shift, and go to state 91

    expr  go to state 138


State 114

   61 expr: expr '-' . expr

    NUM    shift, and go to state 86
    ID     shift, and go to state 87
    TRUE   shift, and go to state 88
    FALSE  shift, and go to state 89
    NOT    shift, and go to state 90
    '('    shift, and go to state 91

    expr  go to state 139


State 115

   64 expr: expr '*' . expr

    NUM    shift, and go to state 86
    ID     shift, and go to state 87
    TRUE   shift, and go to state 88
    FALSE  shift, and go to state 89
    NOT    shift, and go to state 90
    '('    shift, and go to state 91

    expr  go to state 140


State 116

   62 expr: expr '/' . expr

    NUM    shift, and go to state 86
    ID     shift, and go to state 87
    TRUE   shift, and go to state 88
    FALSE  shift, and go to state 89
    NOT    shift, and go to state 90
    '('    shift, and go to state 91

    expr  go to state 141


State 117

   63 expr: expr '%' . expr

    NUM    shift, and go to state 86
    ID     shift, and go to state 87
    TRUE   shift, and go to state 88
    FALSE  shift, and go to state 89
    NOT    shift, and go to state 90
    '('    shift, and go to state 91

    expr  go to state 142


State 118

   37 retstmt: RETURN expr ';' .

    $default  reduce using rule 37 (retstmt)


State 119

   43 Stmt: ID '=' expr ';' .

    $default  reduce using rule 43 (Stmt)


State 120

   44 Stmt: ID '[' expr ']' . '=' expr ';'

    '='  shift, and go to state 143


State 121

   45 Stmt: READ '(' ID ')' . ';'

    ';'  shift, and go to state 144


State 122

   46 Stmt: READ '(' ID '[' . expr ']' ')' ';'

    NUM    shift, and go to state 86
    ID     shift, and go to state 87
    TRUE   shift, and go to state 88
    FALSE  shift, and go to state 89
    NOT    shift, and go to state 90
    '('    shift, and go to state 91

    expr  go to state 145


State 123

   47 Stmt: WRITE '(' expr ')' . ';'

    ';'  shift, and go to state 146


State 124

   40 Stmt: IF '(' expr ')' . THEN Slist ENDIF ';'
   41     | IF '(' expr ')' . THEN Slist ELSE Slist ENDIF ';'

    THEN  shift, and go to state 147


State 125

   42 Stmt: WHILE '(' expr ')' . DO Slist ENDWHILE ';'

    DO  shift, and go to state 148


State 126

   48 exprlist: exprlist . ',' expr
   67 expr: ID '(' exprlist . ')'

    ','  shift, and go to state 149
    ')'  shift, and go to state 150


State 127

   49 exprlist: expr .
   51 expr: expr . '<' expr
   52     | expr . '>' expr
   53     | expr . EQUAL expr
   54     | expr . GE expr
   55     | expr . LE expr
   56     | expr . NE expr
   57     | expr . AND expr
   58     | expr . OR expr
   60     | expr . '+' expr
   61     | expr . '-' expr
   62     | expr . '/' expr
   63     | expr . '%' expr
   64     | expr . '*' expr

    EQUAL  shift, and go to state 105
    GE     shift, and go to state 106
    LE     shift, and go to state 107
    NE     shift, and go to state 108
    AND    shift, and go to state 109
    OR     shift, and go to state 110
    '<'    shift, and go to state 111
    '>'    shift, and go to state 112
    '+'    shift, and go to state 113
    '-'    shift, and go to state 114
    '*'    shift, and go to state 115
    '/'    shift, and go to state 116
    '%'    shift, and go to state 117

    $default  reduce using rule 49 (exprlist)


State 128

   51 expr: expr . '<' expr
   52     | expr . '>' expr
   53     | expr . EQUAL expr
   54     | expr . GE expr
   55     | expr . LE expr
   56     | expr . NE expr
   57     | expr . AND expr
   58     | expr . OR expr
   60     | expr . '+' expr
   61     | expr . '-' expr
   62     | expr . '/' expr
   63     | expr . '%' expr
   64     | expr . '*' expr
   68     | ID '[' expr . ']'

    EQUAL  shift, and go to state 105
    GE     shift, and go to state 106
    LE     shift, and go to state 107
    NE     shift, and go to state 108
    AND    shift, and go to state 109
    OR     shift, and go to state 110
    '<'    shift, and go to state 111
    '>'    shift, and go to state 112
    '+'    shift, and go to state 113
    '-'    shift, and go to state 114
    '*'    shift, and go to state 115
    '/'    shift, and go to state 116
    '%'    shift, and go to state 117
    ']'    shift, and go to state 151


State 129

   65 expr: '(' expr ')' .

    $default  reduce using rule 65 (expr)


State 130

   51 expr: expr . '<' expr
   52     | expr . '>' expr
   53     | expr . EQUAL expr
   53     | expr EQUAL expr .
   54     | expr . GE expr
   55     | expr . LE expr
   56     | expr . NE expr
   57     | expr . AND expr
   58     | expr . OR expr
   60     | expr . '+' expr
   61     | expr . '-' expr
   62     | expr . '/' expr
   63     | expr . '%' expr
   64     | expr . '*' expr

    GE   shift, and go to state 106
    LE   shift, and go to state 107
    '<'  shift, and go to state 111
    '>'  shift, and go to state 112
    '+'  shift, and go to state 113
    '-'  shift, and go to state 114
    '*'  shift, and go to state 115
    '/'  shift, and go to state 116
    '%'  shift, and go to state 117

    $default  reduce using rule 53 (expr)


State 131

   51 expr: expr . '<' expr
   52     | expr . '>' expr
   53     | expr . EQUAL expr
   54     | expr . GE expr
   54     | expr GE expr .
   55     | expr . LE expr
   56     | expr . NE expr
   57     | expr . AND expr
   58     | expr . OR expr
   60     | expr . '+' expr
   61     | expr . '-' expr
   62     | expr . '/' expr
   63     | expr . '%' expr
   64     | expr . '*' expr

    '+'  shift, and go to state 113
    '-'  shift, and go to state 114
    '*'  shift, and go to state 115
    '/'  shift, and go to state 116
    '%'  shift, and go to state 117

    $default  reduce using rule 54 (expr)


State 132

   51 expr: expr . '<' expr
   52     | expr . '>' expr
   53     | expr . EQUAL expr
   54     | expr . GE expr
   55     | expr . LE expr
   55     | expr LE expr .
   56     | expr . NE expr
   57     | expr . AND expr
   58     | expr . OR expr
   60     | expr . '+' expr
   61     | expr . '-' expr
   62     | expr . '/' expr
   63     | expr . '%' expr
   64     | expr . '*' expr

    '+'  shift, and go to state 113
    '-'  shift, and go to state 114
    '*'  shift, and go to state 115
    '/'  shift, and go to state 116
    '%'  shift, and go to state 117

    $default  reduce using rule 55 (expr)


State 133

   51 expr: expr . '<' expr
   52     | expr . '>' expr
   53     | expr . EQUAL expr
   54     | expr . GE expr
   55     | expr . LE expr
   56     | expr . NE expr
   56     | expr NE expr .
   57     | expr . AND expr
   58     | expr . OR expr
   60     | expr . '+' expr
   61     | expr . '-' expr
   62     | expr . '/' expr
   63     | expr . '%' expr
   64     | expr . '*' expr

    GE   shift, and go to state 106
    LE   shift, and go to state 107
    '<'  shift, and go to state 111
    '>'  shift, and go to state 112
    '+'  shift, and go to state 113
    '-'  shift, and go to state 114
    '*'  shift, and go to state 115
    '/'  shift, and go to state 116
    '%'  shift, and go to state 117

    $default  reduce using rule 56 (expr)


State 134

   51 expr: expr . '<' expr
   52     | expr . '>' expr
   53     | expr . EQUAL expr
   54     | expr . GE expr
   55     | expr . LE expr
   56     | expr . NE expr
   57     | expr . AND expr
   57     | expr AND expr .
   58     | expr . OR expr
   60     | expr . '+' expr
   61     | expr . '-' expr
   62     | expr . '/' expr
   63     | expr . '%' expr
   64     | expr . '*' expr

    EQUAL  shift, and go to state 105
    GE     shift, and go to state 106
    LE     shift, and go to state 107
    NE     shift, and go to state 108
    '<'    shift, and go to state 111
    '>'    shift, and go to state 112
    '+'    shift, and go to state 113
    '-'    shift, and go to state 114
    '*'    shift, and go to state 115
    '/'    shift, and go to state 116
    '%'    shift, and go to state 117

    $default  reduce using rule 57 (expr)


State 135

   51 expr: expr . '<' expr
   52     | expr . '>' expr
   53     | expr . EQUAL expr
   54     | expr . GE expr
   55     | expr . LE expr
   56     | expr . NE expr
   57     | expr . AND expr
   58     | expr . OR expr
   58     | expr OR expr .
   60     | expr . '+' expr
   61     | expr . '-' expr
   62     | expr . '/' expr
   63     | expr . '%' expr
   64     | expr . '*' expr

    EQUAL  shift, and go to state 105
    GE     shift, and go to state 106
    LE     shift, and go to state 107
    NE     shift, and go to state 108
    AND    shift, and go to state 109
    '<'    shift, and go to state 111
    '>'    shift, and go to state 112
    '+'    shift, and go to state 113
    '-'    shift, and go to state 114
    '*'    shift, and go to state 115
    '/'    shift, and go to state 116
    '%'    shift, and go to state 117

    $default  reduce using rule 58 (expr)


State 136

   51 expr: expr . '<' expr
   51     | expr '<' expr .
   52     | expr . '>' expr
   53     | expr . EQUAL expr
   54     | expr . GE expr
   55     | expr . LE expr
   56     | expr . NE expr
   57     | expr . AND expr
   58     | expr . OR expr
   60     | expr . '+' expr
   61     | expr . '-' expr
   62     | expr . '/' expr
   63     | expr . '%' expr
   64     | expr . '*' expr

    '+'  shift, and go to state 113
    '-'  shift, and go to state 114
    '*'  shift, and go to state 115
    '/'  shift, and go to state 116
    '%'  shift, and go to state 117

    $default  reduce using rule 51 (expr)


State 137

   51 expr: expr . '<' expr
   52     | expr . '>' expr
   52     | expr '>' expr .
   53     | expr . EQUAL expr
   54     | expr . GE expr
   55     | expr . LE expr
   56     | expr . NE expr
   57     | expr . AND expr
   58     | expr . OR expr
   60     | expr . '+' expr
   61     | expr . '-' expr
   62     | expr . '/' expr
   63     | expr . '%' expr
   64     | expr . '*' expr

    '+'  shift, and go to state 113
    '-'  shift, and go to state 114
    '*'  shift, and go to state 115
    '/'  shift, and go to state 116
    '%'  shift, and go to state 117

    $default  reduce using rule 52 (expr)


State 138

   51 expr: expr . '<' expr
   52     | expr . '>' expr
   53     | expr . EQUAL expr
   54     | expr . GE expr
   55     | expr . LE expr
   56     | expr . NE expr
   57     | expr . AND expr
   58     | expr . OR expr
   60     | expr . '+' expr
   60     | expr '+' expr .
   61     | expr . '-' expr
   62     | expr . '/' expr
   63     | expr . '%' expr
   64     | expr . '*' expr

    '*'  shift, and go to state 115
    '/'  shift, and go to state 116
    '%'  shift, and go to state 117

    $default  reduce using rule 60 (expr)


State 139

   51 expr: expr . '<' expr
   52     | expr . '>' expr
   53     | expr . EQUAL expr
   54     | expr . GE expr
   55     | expr . LE expr
   56     | expr . NE expr
   57     | expr . AND expr
   58     | expr . OR expr
   60     | expr . '+' expr
   61     | expr . '-' expr
   61     | expr '-' expr .
   62     | expr . '/' expr
   63     | expr . '%' expr
   64     | expr . '*' expr

    '*'  shift, and go to state 115
    '/'  shift, and go to state 116
    '%'  shift, and go to state 117

    $default  reduce using rule 61 (expr)


State 140

   51 expr: expr . '<' expr
   52     | expr . '>' expr
   53     | expr . EQUAL expr
   54     | expr . GE expr
   55     | expr . LE expr
   56     | expr . NE expr
   57     | expr . AND expr
   58     | expr . OR expr
   60     | expr . '+' expr
   61     | expr . '-' expr
   62     | expr . '/' expr
   63     | expr . '%' expr
   64     | expr . '*' expr
   64     | expr '*' expr .

    $default  reduce using rule 64 (expr)


State 141

   51 expr: expr . '<' expr
   52     | expr . '>' expr
   53     | expr . EQUAL expr
   54     | expr . GE expr
   55     | expr . LE expr
   56     | expr . NE expr
   57     | expr . AND expr
   58     | expr . OR expr
   60     | expr . '+' expr
   61     | expr . '-' expr
   62     | expr . '/' expr
   62     | expr '/' expr .
   63     | expr . '%' expr
   64     | expr . '*' expr

    $default  reduce using rule 62 (expr)


State 142

   51 expr: expr . '<' expr
   52     | expr . '>' expr
   53     | expr . EQUAL expr
   54     | expr . GE expr
   55     | expr . LE expr
   56     | expr . NE expr
   57     | expr . AND expr
   58     | expr . OR expr
   60     | expr . '+' expr
   61     | expr . '-' expr
   62     | expr . '/' expr
   63     | expr . '%' expr
   63     | expr '%' expr .
   64     | expr . '*' expr

    $default  reduce using rule 63 (expr)


State 143

   44 Stmt: ID '[' expr ']' '=' . expr ';'

    NUM    shift, and go to state 86
    ID     shift, and go to state 87
    TRUE   shift, and go to state 88
    FALSE  shift, and go to state 89
    NOT    shift, and go to state 90
    '('    shift, and go to state 91

    expr  go to state 152


State 144

   45 Stmt: READ '(' ID ')' ';' .

    $default  reduce using rule 45 (Stmt)


State 145

   46 Stmt: READ '(' ID '[' expr . ']' ')' ';'
   51 expr: expr . '<' expr
   52     | expr . '>' expr
   53     | expr . EQUAL expr
   54     | expr . GE expr
   55     | expr . LE expr
   56     | expr . NE expr
   57     | expr . AND expr
   58     | expr . OR expr
   60     | expr . '+' expr
   61     | expr . '-' expr
   62     | expr . '/' expr
   63     | expr . '%' expr
   64     | expr . '*' expr

    EQUAL  shift, and go to state 105
    GE     shift, and go to state 106
    LE     shift, and go to state 107
    NE     shift, and go to state 108
    AND    shift, and go to state 109
    OR     shift, and go to state 110
    '<'    shift, and go to state 111
    '>'    shift, and go to state 112
    '+'    shift, and go to state 113
    '-'    shift, and go to state 114
    '*'    shift, and go to state 115
    '/'    shift, and go to state 116
    '%'    shift, and go to state 117
    ']'    shift, and go to state 153


State 146

   47 Stmt: WRITE '(' expr ')' ';' .

    $default  reduce using rule 47 (Stmt)


State 147

   40 Stmt: IF '(' expr ')' THEN . Slist ENDIF ';'
   41     | IF '(' expr ')' THEN . Slist ELSE Slist ENDIF ';'

    $default  reduce using rule 39 (Slist)

    Slist  go to state 154


State 148

   42 Stmt: WHILE '(' expr ')' DO . Slist ENDWHILE ';'

    $default  reduce using rule 39 (Slist)

    Slist  go to state 155


State 149

   48 exprlist: exprlist ',' . expr

    NUM    shift, and go to state 86
    ID     shift, and go to state 87
    TRUE   shift, and go to state 88
    FALSE  shift, and go to state 89
    NOT    shift, and go to state 90
    '('    shift, and go to state 91

    expr  go to state 156


State 150

   67 expr: ID '(' exprlist ')' .

    $default  reduce using rule 67 (expr)


State 151

   68 expr: ID '[' expr ']' .

    $default  reduce using rule 68 (expr)


State 152

   44 Stmt: ID '[' expr ']' '=' expr . ';'
   51 expr: expr . '<' expr
   52     | expr . '>' expr
   53     | expr . EQUAL expr
   54     | expr . GE expr
   55     | expr . LE expr
   56     | expr . NE expr
   57     | expr . AND expr
   58     | expr . OR expr
   60     | expr . '+' expr
   61     | expr . '-' expr
   62     | expr . '/' expr
   63     | expr . '%' expr
   64     | expr . '*' expr

    EQUAL  shift, and go to state 105
    GE     shift, and go to state 106
    LE     shift, and go to state 107
    NE     shift, and go to state 108
    AND    shift, and go to state 109
    OR     shift, and go to state 110
    '<'    shift, and go to state 111
    '>'    shift, and go to state 112
    '+'    shift, and go to state 113
    '-'    shift, and go to state 114
    '*'    shift, and go to state 115
    '/'    shift, and go to state 116
    '%'    shift, and go to state 117
    ';'    shift, and go to state 157


State 153

   46 Stmt: READ '(' ID '[' expr ']' . ')' ';'

    ')'  shift, and go to state 158


State 154

   38 Slist: Slist . Stmt
   40 Stmt: IF '(' expr ')' THEN Slist . ENDIF ';'
   41     | IF '(' expr ')' THEN Slist . ELSE Slist ENDIF ';'

    ID     shift, and go to state 70
    READ   shift, and go to state 71
    WRITE  shift, and go to state 72
    IF     shift, and go to state 73
    ELSE   shift, and go to state 159
    ENDIF  shift, and go to state 160
    WHILE  shift, and go to state 74

    Stmt  go to state 77


State 155

   38 Slist: Slist . Stmt
   42 Stmt: WHILE '(' expr ')' DO Slist . ENDWHILE ';'

    ID        shift, and go to state 70
    READ      shift, and go to state 71
    WRITE     shift, and go to state 72
    IF        shift, and go to state 73
    WHILE     shift, and go to state 74
    ENDWHILE  shift, and go to state 161

    Stmt  go to state 77


State 156

   48 exprlist: exprlist ',' expr .
   51 expr: expr . '<' expr
   52     | expr . '>' expr
   53     | expr . EQUAL expr
   54     | expr . GE expr
   55     | expr . LE expr
   56     | expr . NE expr
   57     | expr . AND expr
   58     | expr . OR expr
   60     | expr . '+' expr
   61     | expr . '-' expr
   62     | expr . '/' expr
   63     | expr . '%' expr
   64     | expr . '*' expr

    EQUAL  shift, and go to state 105
    GE     shift, and go to state 106
    LE     shift, and go to state 107
    NE     shift, and go to state 108
    AND    shift, and go to state 109
    OR     shift, and go to state 110
    '<'    shift, and go to state 111
    '>'    shift, and go to state 112
    '+'    shift, and go to state 113
    '-'    shift, and go to state 114
    '*'    shift, and go to state 115
    '/'    shift, and go to state 116
    '%'    shift, and go to state 117

    $default  reduce using rule 48 (exprlist)


State 157

   44 Stmt: ID '[' expr ']' '=' expr ';' .

    $default  reduce using rule 44 (Stmt)


State 158

   46 Stmt: READ '(' ID '[' expr ']' ')' . ';'

    ';'  shift, and go to state 162


State 159

   41 Stmt: IF '(' expr ')' THEN Slist ELSE . Slist ENDIF ';'

    $default  reduce using rule 39 (Slist)

    Slist  go to state 163


State 160

   40 Stmt: IF '(' expr ')' THEN Slist ENDIF . ';'

    ';'  shift, and go to state 164


State 161

   42 Stmt: WHILE '(' expr ')' DO Slist ENDWHILE . ';'

    ';'  shift, and go to state 165


State 162

   46 Stmt: READ '(' ID '[' expr ']' ')' ';' .

    $default  reduce using rule 46 (Stmt)


State 163

   38 Slist: Slist . Stmt
   41 Stmt: IF '(' expr ')' THEN Slist ELSE Slist . ENDIF ';'

    ID     shift, and go to state 70
    READ   shift, and go to state 71
    WRITE  shift, and go to state 72
    IF     shift, and go to state 73
    ENDIF  shift, and go to state 166
    WHILE  shift, and go to state 74

    Stmt  go to state 77


State 164

   40 Stmt: IF '(' expr ')' THEN Slist ENDIF ';' .

    $default  reduce using rule 40 (Stmt)


State 165

   42 Stmt: WHILE '(' expr ')' DO Slist ENDWHILE ';' .

    $default  reduce using rule 42 (Stmt)


State 166

   41 Stmt: IF '(' expr ')' THEN Slist ELSE Slist ENDIF . ';'

    ';'  shift, and go to state 167


State 167

   41 Stmt: IF '(' expr ')' THEN Slist ELSE Slist ENDIF ';' .

    $default  reduce using rule 41 (Stmt)
