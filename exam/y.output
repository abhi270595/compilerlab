Grammar

    0 $accept: pgm $end

    1 $@1: %empty

    2 pgm: $@1 total

    3 total: gdefblock fdeflist mainblock

    4 gdefblock: DECL gdeflist ENDDECL

    5 gdeflist: gdecl gdeflist
    6         | %empty

    7 gdecl: type gidlist ';'

    8 type: INTEGER
    9     | BOOLEAN
   10     | PAIR

   11 gidlist: gid ',' gidlist
   12        | gid

   13 gid: ID

   14 $@2: %empty

   15 gid: ID $@2 '(' arglist ')'
   16    | ID '[' NUM ']'

   17 arglist: argglist
   18        | %empty

   19 argglist: arg argglist
   20         | type argidlist

   21 arg: type argidlist ';'

   22 argidlist: argid ',' argidlist
   23          | argid

   24 argid: ID
   25      | '&' ID

   26 fdeflist: fdeflist fdef
   27         | %empty

   28 $@3: %empty

   29 $@4: %empty

   30 fdef: type $@3 ID '(' arglist ')' $@4 '{' ldefblock body '}'

   31 $@5: %empty

   32 mainblock: INTEGER $@5 MAIN '(' ')' '{' ldefblock body '}'

   33 ldefblock: DECL ldeflist ENDDECL

   34 ldeflist: ldecl ldeflist
   35         | %empty

   36 ldecl: type lidlist ';'

   37 lidlist: lid ',' lidlist
   38        | lid

   39 lid: ID

   40 body: BEGINING Slist retstmt END

   41 retstmt: RETURN expr ';'

   42 Slist: Slist Stmt
   43      | Stmt

   44 Stmt: IF '(' expr ')' THEN Slist ENDIF ';'
   45     | IF '(' expr ')' THEN Slist ELSE Slist ENDIF ';'
   46     | WHILE '(' expr ')' DO Slist ENDWHILE ';'
   47     | ID '=' expr ';'
   48     | ID '.' NUM '=' expr ';'
   49     | ID '[' expr ']' '=' expr ';'
   50     | READ '(' ID ')' ';'
   51     | READ '(' ID '[' expr ']' ')' ';'
   52     | WRITE '(' expr ')' ';'

   53 exprlist: exprlist ',' expr
   54         | expr
   55         | %empty

   56 expr: expr '<' expr
   57     | expr '>' expr
   58     | expr EQUAL expr
   59     | expr GE expr
   60     | expr LE expr
   61     | expr NE expr
   62     | expr AND expr
   63     | expr OR expr
   64     | NOT expr
   65     | expr '+' expr
   66     | expr '-' expr
   67     | expr '/' expr
   68     | expr '%' expr
   69     | expr '*' expr
   70     | '(' expr ')'
   71     | ID
   72     | ID '.' NUM
   73     | ID '(' exprlist ')'
   74     | '(' expr ',' expr ')'
   75     | ID '[' expr ']'
   76     | NUM
   77     | TRUE
   78     | FALSE


Terminals, with rules where they appear

$end (0) 0
'%' (37) 68
'&' (38) 25
'(' (40) 15 30 32 44 45 46 50 51 52 70 73 74
')' (41) 15 30 32 44 45 46 50 51 52 70 73 74
'*' (42) 69
'+' (43) 65
',' (44) 11 22 37 53 74
'-' (45) 66
'.' (46) 48 72
'/' (47) 67
';' (59) 7 21 36 41 44 45 46 47 48 49 50 51 52
'<' (60) 56
'=' (61) 47 48 49
'>' (62) 57
'[' (91) 16 49 51 75
']' (93) 16 49 51 75
'{' (123) 30 32
'}' (125) 30 32
error (256)
NUM (258) 16 48 72 76
ID (259) 13 15 16 24 25 30 39 47 48 49 50 51 71 72 73 75
READ (260) 50 51
WRITE (261) 52
IF (262) 44 45
THEN (263) 44 45
ELSE (264) 45
ENDIF (265) 44 45
WHILE (266) 46
DO (267) 46
ENDWHILE (268) 46
INTEGER (269) 8 32
BOOLEAN (270) 9
DECL (271) 4 33
ENDDECL (272) 4 33
BEGINING (273) 40
END (274) 40
MAIN (275) 32
RETURN (276) 41
EQUAL (277) 58
TRUE (278) 77
FALSE (279) 78
GE (280) 59
LE (281) 60
NE (282) 61
AND (283) 62
OR (284) 63
NOT (285) 64
PAIR (286) 10


Nonterminals, with rules where they appear

$accept (50)
    on left: 0
pgm (51)
    on left: 2, on right: 0
$@1 (52)
    on left: 1, on right: 2
total (53)
    on left: 3, on right: 2
gdefblock (54)
    on left: 4, on right: 3
gdeflist (55)
    on left: 5 6, on right: 4 5
gdecl (56)
    on left: 7, on right: 5
type (57)
    on left: 8 9 10, on right: 7 20 21 30 36
gidlist (58)
    on left: 11 12, on right: 7 11
gid (59)
    on left: 13 15 16, on right: 11 12
$@2 (60)
    on left: 14, on right: 15
arglist (61)
    on left: 17 18, on right: 15 30
argglist (62)
    on left: 19 20, on right: 17 19
arg (63)
    on left: 21, on right: 19
argidlist (64)
    on left: 22 23, on right: 20 21 22
argid (65)
    on left: 24 25, on right: 22 23
fdeflist (66)
    on left: 26 27, on right: 3 26
fdef (67)
    on left: 30, on right: 26
$@3 (68)
    on left: 28, on right: 30
$@4 (69)
    on left: 29, on right: 30
mainblock (70)
    on left: 32, on right: 3
$@5 (71)
    on left: 31, on right: 32
ldefblock (72)
    on left: 33, on right: 30 32
ldeflist (73)
    on left: 34 35, on right: 33 34
ldecl (74)
    on left: 36, on right: 34
lidlist (75)
    on left: 37 38, on right: 36 37
lid (76)
    on left: 39, on right: 37 38
body (77)
    on left: 40, on right: 30 32
retstmt (78)
    on left: 41, on right: 40
Slist (79)
    on left: 42 43, on right: 40 42 44 45 46
Stmt (80)
    on left: 44 45 46 47 48 49 50 51 52, on right: 42 43
exprlist (81)
    on left: 53 54 55, on right: 53 73
expr (82)
    on left: 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73
    74 75 76 77 78, on right: 41 44 45 46 47 48 49 51 52 53 54 56 57
    58 59 60 61 62 63 64 65 66 67 68 69 70 74 75


State 0

    0 $accept: . pgm $end

    $default  reduce using rule 1 ($@1)

    pgm  go to state 1
    $@1  go to state 2


State 1

    0 $accept: pgm . $end

    $end  shift, and go to state 3


State 2

    2 pgm: $@1 . total

    DECL  shift, and go to state 4

    total      go to state 5
    gdefblock  go to state 6


State 3

    0 $accept: pgm $end .

    $default  accept


State 4

    4 gdefblock: DECL . gdeflist ENDDECL

    INTEGER  shift, and go to state 7
    BOOLEAN  shift, and go to state 8
    PAIR     shift, and go to state 9

    $default  reduce using rule 6 (gdeflist)

    gdeflist  go to state 10
    gdecl     go to state 11
    type      go to state 12


State 5

    2 pgm: $@1 total .

    $default  reduce using rule 2 (pgm)


State 6

    3 total: gdefblock . fdeflist mainblock

    $default  reduce using rule 27 (fdeflist)

    fdeflist  go to state 13


State 7

    8 type: INTEGER .

    $default  reduce using rule 8 (type)


State 8

    9 type: BOOLEAN .

    $default  reduce using rule 9 (type)


State 9

   10 type: PAIR .

    $default  reduce using rule 10 (type)


State 10

    4 gdefblock: DECL gdeflist . ENDDECL

    ENDDECL  shift, and go to state 14


State 11

    5 gdeflist: gdecl . gdeflist

    INTEGER  shift, and go to state 7
    BOOLEAN  shift, and go to state 8
    PAIR     shift, and go to state 9

    $default  reduce using rule 6 (gdeflist)

    gdeflist  go to state 15
    gdecl     go to state 11
    type      go to state 12


State 12

    7 gdecl: type . gidlist ';'

    ID  shift, and go to state 16

    gidlist  go to state 17
    gid      go to state 18


State 13

    3 total: gdefblock fdeflist . mainblock
   26 fdeflist: fdeflist . fdef

    INTEGER  shift, and go to state 19
    BOOLEAN  shift, and go to state 8
    PAIR     shift, and go to state 9

    type       go to state 20
    fdef       go to state 21
    mainblock  go to state 22


State 14

    4 gdefblock: DECL gdeflist ENDDECL .

    $default  reduce using rule 4 (gdefblock)


State 15

    5 gdeflist: gdecl gdeflist .

    $default  reduce using rule 5 (gdeflist)


State 16

   13 gid: ID .
   15    | ID . $@2 '(' arglist ')'
   16    | ID . '[' NUM ']'

    '['  shift, and go to state 23

    '('       reduce using rule 14 ($@2)
    $default  reduce using rule 13 (gid)

    $@2  go to state 24


State 17

    7 gdecl: type gidlist . ';'

    ';'  shift, and go to state 25


State 18

   11 gidlist: gid . ',' gidlist
   12        | gid .

    ','  shift, and go to state 26

    $default  reduce using rule 12 (gidlist)


State 19

    8 type: INTEGER .
   32 mainblock: INTEGER . $@5 MAIN '(' ')' '{' ldefblock body '}'

    MAIN      reduce using rule 31 ($@5)
    $default  reduce using rule 8 (type)

    $@5  go to state 27


State 20

   30 fdef: type . $@3 ID '(' arglist ')' $@4 '{' ldefblock body '}'

    $default  reduce using rule 28 ($@3)

    $@3  go to state 28


State 21

   26 fdeflist: fdeflist fdef .

    $default  reduce using rule 26 (fdeflist)


State 22

    3 total: gdefblock fdeflist mainblock .

    $default  reduce using rule 3 (total)


State 23

   16 gid: ID '[' . NUM ']'

    NUM  shift, and go to state 29


State 24

   15 gid: ID $@2 . '(' arglist ')'

    '('  shift, and go to state 30


State 25

    7 gdecl: type gidlist ';' .

    $default  reduce using rule 7 (gdecl)


State 26

   11 gidlist: gid ',' . gidlist

    ID  shift, and go to state 16

    gidlist  go to state 31
    gid      go to state 18


State 27

   32 mainblock: INTEGER $@5 . MAIN '(' ')' '{' ldefblock body '}'

    MAIN  shift, and go to state 32


State 28

   30 fdef: type $@3 . ID '(' arglist ')' $@4 '{' ldefblock body '}'

    ID  shift, and go to state 33


State 29

   16 gid: ID '[' NUM . ']'

    ']'  shift, and go to state 34


State 30

   15 gid: ID $@2 '(' . arglist ')'

    INTEGER  shift, and go to state 7
    BOOLEAN  shift, and go to state 8
    PAIR     shift, and go to state 9

    $default  reduce using rule 18 (arglist)

    type      go to state 35
    arglist   go to state 36
    argglist  go to state 37
    arg       go to state 38


State 31

   11 gidlist: gid ',' gidlist .

    $default  reduce using rule 11 (gidlist)


State 32

   32 mainblock: INTEGER $@5 MAIN . '(' ')' '{' ldefblock body '}'

    '('  shift, and go to state 39


State 33

   30 fdef: type $@3 ID . '(' arglist ')' $@4 '{' ldefblock body '}'

    '('  shift, and go to state 40


State 34

   16 gid: ID '[' NUM ']' .

    $default  reduce using rule 16 (gid)


State 35

   20 argglist: type . argidlist
   21 arg: type . argidlist ';'

    ID   shift, and go to state 41
    '&'  shift, and go to state 42

    argidlist  go to state 43
    argid      go to state 44


State 36

   15 gid: ID $@2 '(' arglist . ')'

    ')'  shift, and go to state 45


State 37

   17 arglist: argglist .

    $default  reduce using rule 17 (arglist)


State 38

   19 argglist: arg . argglist

    INTEGER  shift, and go to state 7
    BOOLEAN  shift, and go to state 8
    PAIR     shift, and go to state 9

    type      go to state 35
    argglist  go to state 46
    arg       go to state 38


State 39

   32 mainblock: INTEGER $@5 MAIN '(' . ')' '{' ldefblock body '}'

    ')'  shift, and go to state 47


State 40

   30 fdef: type $@3 ID '(' . arglist ')' $@4 '{' ldefblock body '}'

    INTEGER  shift, and go to state 7
    BOOLEAN  shift, and go to state 8
    PAIR     shift, and go to state 9

    $default  reduce using rule 18 (arglist)

    type      go to state 35
    arglist   go to state 48
    argglist  go to state 37
    arg       go to state 38


State 41

   24 argid: ID .

    $default  reduce using rule 24 (argid)


State 42

   25 argid: '&' . ID

    ID  shift, and go to state 49


State 43

   20 argglist: type argidlist .
   21 arg: type argidlist . ';'

    ';'  shift, and go to state 50

    $default  reduce using rule 20 (argglist)


State 44

   22 argidlist: argid . ',' argidlist
   23          | argid .

    ','  shift, and go to state 51

    $default  reduce using rule 23 (argidlist)


State 45

   15 gid: ID $@2 '(' arglist ')' .

    $default  reduce using rule 15 (gid)


State 46

   19 argglist: arg argglist .

    $default  reduce using rule 19 (argglist)


State 47

   32 mainblock: INTEGER $@5 MAIN '(' ')' . '{' ldefblock body '}'

    '{'  shift, and go to state 52


State 48

   30 fdef: type $@3 ID '(' arglist . ')' $@4 '{' ldefblock body '}'

    ')'  shift, and go to state 53


State 49

   25 argid: '&' ID .

    $default  reduce using rule 25 (argid)


State 50

   21 arg: type argidlist ';' .

    $default  reduce using rule 21 (arg)


State 51

   22 argidlist: argid ',' . argidlist

    ID   shift, and go to state 41
    '&'  shift, and go to state 42

    argidlist  go to state 54
    argid      go to state 44


State 52

   32 mainblock: INTEGER $@5 MAIN '(' ')' '{' . ldefblock body '}'

    DECL  shift, and go to state 55

    ldefblock  go to state 56


State 53

   30 fdef: type $@3 ID '(' arglist ')' . $@4 '{' ldefblock body '}'

    $default  reduce using rule 29 ($@4)

    $@4  go to state 57


State 54

   22 argidlist: argid ',' argidlist .

    $default  reduce using rule 22 (argidlist)


State 55

   33 ldefblock: DECL . ldeflist ENDDECL

    INTEGER  shift, and go to state 7
    BOOLEAN  shift, and go to state 8
    PAIR     shift, and go to state 9

    $default  reduce using rule 35 (ldeflist)

    type      go to state 58
    ldeflist  go to state 59
    ldecl     go to state 60


State 56

   32 mainblock: INTEGER $@5 MAIN '(' ')' '{' ldefblock . body '}'

    BEGINING  shift, and go to state 61

    body  go to state 62


State 57

   30 fdef: type $@3 ID '(' arglist ')' $@4 . '{' ldefblock body '}'

    '{'  shift, and go to state 63


State 58

   36 ldecl: type . lidlist ';'

    ID  shift, and go to state 64

    lidlist  go to state 65
    lid      go to state 66


State 59

   33 ldefblock: DECL ldeflist . ENDDECL

    ENDDECL  shift, and go to state 67


State 60

   34 ldeflist: ldecl . ldeflist

    INTEGER  shift, and go to state 7
    BOOLEAN  shift, and go to state 8
    PAIR     shift, and go to state 9

    $default  reduce using rule 35 (ldeflist)

    type      go to state 58
    ldeflist  go to state 68
    ldecl     go to state 60


State 61

   40 body: BEGINING . Slist retstmt END

    ID     shift, and go to state 69
    READ   shift, and go to state 70
    WRITE  shift, and go to state 71
    IF     shift, and go to state 72
    WHILE  shift, and go to state 73

    Slist  go to state 74
    Stmt   go to state 75


State 62

   32 mainblock: INTEGER $@5 MAIN '(' ')' '{' ldefblock body . '}'

    '}'  shift, and go to state 76


State 63

   30 fdef: type $@3 ID '(' arglist ')' $@4 '{' . ldefblock body '}'

    DECL  shift, and go to state 55

    ldefblock  go to state 77


State 64

   39 lid: ID .

    $default  reduce using rule 39 (lid)


State 65

   36 ldecl: type lidlist . ';'

    ';'  shift, and go to state 78


State 66

   37 lidlist: lid . ',' lidlist
   38        | lid .

    ','  shift, and go to state 79

    $default  reduce using rule 38 (lidlist)


State 67

   33 ldefblock: DECL ldeflist ENDDECL .

    $default  reduce using rule 33 (ldefblock)


State 68

   34 ldeflist: ldecl ldeflist .

    $default  reduce using rule 34 (ldeflist)


State 69

   47 Stmt: ID . '=' expr ';'
   48     | ID . '.' NUM '=' expr ';'
   49     | ID . '[' expr ']' '=' expr ';'

    '='  shift, and go to state 80
    '['  shift, and go to state 81
    '.'  shift, and go to state 82


State 70

   50 Stmt: READ . '(' ID ')' ';'
   51     | READ . '(' ID '[' expr ']' ')' ';'

    '('  shift, and go to state 83


State 71

   52 Stmt: WRITE . '(' expr ')' ';'

    '('  shift, and go to state 84


State 72

   44 Stmt: IF . '(' expr ')' THEN Slist ENDIF ';'
   45     | IF . '(' expr ')' THEN Slist ELSE Slist ENDIF ';'

    '('  shift, and go to state 85


State 73

   46 Stmt: WHILE . '(' expr ')' DO Slist ENDWHILE ';'

    '('  shift, and go to state 86


State 74

   40 body: BEGINING Slist . retstmt END
   42 Slist: Slist . Stmt

    ID      shift, and go to state 69
    READ    shift, and go to state 70
    WRITE   shift, and go to state 71
    IF      shift, and go to state 72
    WHILE   shift, and go to state 73
    RETURN  shift, and go to state 87

    retstmt  go to state 88
    Stmt     go to state 89


State 75

   43 Slist: Stmt .

    $default  reduce using rule 43 (Slist)


State 76

   32 mainblock: INTEGER $@5 MAIN '(' ')' '{' ldefblock body '}' .

    $default  reduce using rule 32 (mainblock)


State 77

   30 fdef: type $@3 ID '(' arglist ')' $@4 '{' ldefblock . body '}'

    BEGINING  shift, and go to state 61

    body  go to state 90


State 78

   36 ldecl: type lidlist ';' .

    $default  reduce using rule 36 (ldecl)


State 79

   37 lidlist: lid ',' . lidlist

    ID  shift, and go to state 64

    lidlist  go to state 91
    lid      go to state 66


State 80

   47 Stmt: ID '=' . expr ';'

    NUM    shift, and go to state 92
    ID     shift, and go to state 93
    TRUE   shift, and go to state 94
    FALSE  shift, and go to state 95
    NOT    shift, and go to state 96
    '('    shift, and go to state 97

    expr  go to state 98


State 81

   49 Stmt: ID '[' . expr ']' '=' expr ';'

    NUM    shift, and go to state 92
    ID     shift, and go to state 93
    TRUE   shift, and go to state 94
    FALSE  shift, and go to state 95
    NOT    shift, and go to state 96
    '('    shift, and go to state 97

    expr  go to state 99


State 82

   48 Stmt: ID '.' . NUM '=' expr ';'

    NUM  shift, and go to state 100


State 83

   50 Stmt: READ '(' . ID ')' ';'
   51     | READ '(' . ID '[' expr ']' ')' ';'

    ID  shift, and go to state 101


State 84

   52 Stmt: WRITE '(' . expr ')' ';'

    NUM    shift, and go to state 92
    ID     shift, and go to state 93
    TRUE   shift, and go to state 94
    FALSE  shift, and go to state 95
    NOT    shift, and go to state 96
    '('    shift, and go to state 97

    expr  go to state 102


State 85

   44 Stmt: IF '(' . expr ')' THEN Slist ENDIF ';'
   45     | IF '(' . expr ')' THEN Slist ELSE Slist ENDIF ';'

    NUM    shift, and go to state 92
    ID     shift, and go to state 93
    TRUE   shift, and go to state 94
    FALSE  shift, and go to state 95
    NOT    shift, and go to state 96
    '('    shift, and go to state 97

    expr  go to state 103


State 86

   46 Stmt: WHILE '(' . expr ')' DO Slist ENDWHILE ';'

    NUM    shift, and go to state 92
    ID     shift, and go to state 93
    TRUE   shift, and go to state 94
    FALSE  shift, and go to state 95
    NOT    shift, and go to state 96
    '('    shift, and go to state 97

    expr  go to state 104


State 87

   41 retstmt: RETURN . expr ';'

    NUM    shift, and go to state 92
    ID     shift, and go to state 93
    TRUE   shift, and go to state 94
    FALSE  shift, and go to state 95
    NOT    shift, and go to state 96
    '('    shift, and go to state 97

    expr  go to state 105


State 88

   40 body: BEGINING Slist retstmt . END

    END  shift, and go to state 106


State 89

   42 Slist: Slist Stmt .

    $default  reduce using rule 42 (Slist)


State 90

   30 fdef: type $@3 ID '(' arglist ')' $@4 '{' ldefblock body . '}'

    '}'  shift, and go to state 107


State 91

   37 lidlist: lid ',' lidlist .

    $default  reduce using rule 37 (lidlist)


State 92

   76 expr: NUM .

    $default  reduce using rule 76 (expr)


State 93

   71 expr: ID .
   72     | ID . '.' NUM
   73     | ID . '(' exprlist ')'
   75     | ID . '[' expr ']'

    '('  shift, and go to state 108
    '['  shift, and go to state 109
    '.'  shift, and go to state 110

    $default  reduce using rule 71 (expr)


State 94

   77 expr: TRUE .

    $default  reduce using rule 77 (expr)


State 95

   78 expr: FALSE .

    $default  reduce using rule 78 (expr)


State 96

   64 expr: NOT . expr

    NUM    shift, and go to state 92
    ID     shift, and go to state 93
    TRUE   shift, and go to state 94
    FALSE  shift, and go to state 95
    NOT    shift, and go to state 96
    '('    shift, and go to state 97

    expr  go to state 111


State 97

   70 expr: '(' . expr ')'
   74     | '(' . expr ',' expr ')'

    NUM    shift, and go to state 92
    ID     shift, and go to state 93
    TRUE   shift, and go to state 94
    FALSE  shift, and go to state 95
    NOT    shift, and go to state 96
    '('    shift, and go to state 97

    expr  go to state 112


State 98

   47 Stmt: ID '=' expr . ';'
   56 expr: expr . '<' expr
   57     | expr . '>' expr
   58     | expr . EQUAL expr
   59     | expr . GE expr
   60     | expr . LE expr
   61     | expr . NE expr
   62     | expr . AND expr
   63     | expr . OR expr
   65     | expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '/' expr
   68     | expr . '%' expr
   69     | expr . '*' expr

    EQUAL  shift, and go to state 113
    GE     shift, and go to state 114
    LE     shift, and go to state 115
    NE     shift, and go to state 116
    AND    shift, and go to state 117
    OR     shift, and go to state 118
    '<'    shift, and go to state 119
    '>'    shift, and go to state 120
    '+'    shift, and go to state 121
    '-'    shift, and go to state 122
    '*'    shift, and go to state 123
    '/'    shift, and go to state 124
    '%'    shift, and go to state 125
    ';'    shift, and go to state 126


State 99

   49 Stmt: ID '[' expr . ']' '=' expr ';'
   56 expr: expr . '<' expr
   57     | expr . '>' expr
   58     | expr . EQUAL expr
   59     | expr . GE expr
   60     | expr . LE expr
   61     | expr . NE expr
   62     | expr . AND expr
   63     | expr . OR expr
   65     | expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '/' expr
   68     | expr . '%' expr
   69     | expr . '*' expr

    EQUAL  shift, and go to state 113
    GE     shift, and go to state 114
    LE     shift, and go to state 115
    NE     shift, and go to state 116
    AND    shift, and go to state 117
    OR     shift, and go to state 118
    '<'    shift, and go to state 119
    '>'    shift, and go to state 120
    '+'    shift, and go to state 121
    '-'    shift, and go to state 122
    '*'    shift, and go to state 123
    '/'    shift, and go to state 124
    '%'    shift, and go to state 125
    ']'    shift, and go to state 127


State 100

   48 Stmt: ID '.' NUM . '=' expr ';'

    '='  shift, and go to state 128


State 101

   50 Stmt: READ '(' ID . ')' ';'
   51     | READ '(' ID . '[' expr ']' ')' ';'

    ')'  shift, and go to state 129
    '['  shift, and go to state 130


State 102

   52 Stmt: WRITE '(' expr . ')' ';'
   56 expr: expr . '<' expr
   57     | expr . '>' expr
   58     | expr . EQUAL expr
   59     | expr . GE expr
   60     | expr . LE expr
   61     | expr . NE expr
   62     | expr . AND expr
   63     | expr . OR expr
   65     | expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '/' expr
   68     | expr . '%' expr
   69     | expr . '*' expr

    EQUAL  shift, and go to state 113
    GE     shift, and go to state 114
    LE     shift, and go to state 115
    NE     shift, and go to state 116
    AND    shift, and go to state 117
    OR     shift, and go to state 118
    '<'    shift, and go to state 119
    '>'    shift, and go to state 120
    '+'    shift, and go to state 121
    '-'    shift, and go to state 122
    '*'    shift, and go to state 123
    '/'    shift, and go to state 124
    '%'    shift, and go to state 125
    ')'    shift, and go to state 131


State 103

   44 Stmt: IF '(' expr . ')' THEN Slist ENDIF ';'
   45     | IF '(' expr . ')' THEN Slist ELSE Slist ENDIF ';'
   56 expr: expr . '<' expr
   57     | expr . '>' expr
   58     | expr . EQUAL expr
   59     | expr . GE expr
   60     | expr . LE expr
   61     | expr . NE expr
   62     | expr . AND expr
   63     | expr . OR expr
   65     | expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '/' expr
   68     | expr . '%' expr
   69     | expr . '*' expr

    EQUAL  shift, and go to state 113
    GE     shift, and go to state 114
    LE     shift, and go to state 115
    NE     shift, and go to state 116
    AND    shift, and go to state 117
    OR     shift, and go to state 118
    '<'    shift, and go to state 119
    '>'    shift, and go to state 120
    '+'    shift, and go to state 121
    '-'    shift, and go to state 122
    '*'    shift, and go to state 123
    '/'    shift, and go to state 124
    '%'    shift, and go to state 125
    ')'    shift, and go to state 132


State 104

   46 Stmt: WHILE '(' expr . ')' DO Slist ENDWHILE ';'
   56 expr: expr . '<' expr
   57     | expr . '>' expr
   58     | expr . EQUAL expr
   59     | expr . GE expr
   60     | expr . LE expr
   61     | expr . NE expr
   62     | expr . AND expr
   63     | expr . OR expr
   65     | expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '/' expr
   68     | expr . '%' expr
   69     | expr . '*' expr

    EQUAL  shift, and go to state 113
    GE     shift, and go to state 114
    LE     shift, and go to state 115
    NE     shift, and go to state 116
    AND    shift, and go to state 117
    OR     shift, and go to state 118
    '<'    shift, and go to state 119
    '>'    shift, and go to state 120
    '+'    shift, and go to state 121
    '-'    shift, and go to state 122
    '*'    shift, and go to state 123
    '/'    shift, and go to state 124
    '%'    shift, and go to state 125
    ')'    shift, and go to state 133


State 105

   41 retstmt: RETURN expr . ';'
   56 expr: expr . '<' expr
   57     | expr . '>' expr
   58     | expr . EQUAL expr
   59     | expr . GE expr
   60     | expr . LE expr
   61     | expr . NE expr
   62     | expr . AND expr
   63     | expr . OR expr
   65     | expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '/' expr
   68     | expr . '%' expr
   69     | expr . '*' expr

    EQUAL  shift, and go to state 113
    GE     shift, and go to state 114
    LE     shift, and go to state 115
    NE     shift, and go to state 116
    AND    shift, and go to state 117
    OR     shift, and go to state 118
    '<'    shift, and go to state 119
    '>'    shift, and go to state 120
    '+'    shift, and go to state 121
    '-'    shift, and go to state 122
    '*'    shift, and go to state 123
    '/'    shift, and go to state 124
    '%'    shift, and go to state 125
    ';'    shift, and go to state 134


State 106

   40 body: BEGINING Slist retstmt END .

    $default  reduce using rule 40 (body)


State 107

   30 fdef: type $@3 ID '(' arglist ')' $@4 '{' ldefblock body '}' .

    $default  reduce using rule 30 (fdef)


State 108

   73 expr: ID '(' . exprlist ')'

    NUM    shift, and go to state 92
    ID     shift, and go to state 93
    TRUE   shift, and go to state 94
    FALSE  shift, and go to state 95
    NOT    shift, and go to state 96
    '('    shift, and go to state 97

    $default  reduce using rule 55 (exprlist)

    exprlist  go to state 135
    expr      go to state 136


State 109

   75 expr: ID '[' . expr ']'

    NUM    shift, and go to state 92
    ID     shift, and go to state 93
    TRUE   shift, and go to state 94
    FALSE  shift, and go to state 95
    NOT    shift, and go to state 96
    '('    shift, and go to state 97

    expr  go to state 137


State 110

   72 expr: ID '.' . NUM

    NUM  shift, and go to state 138


State 111

   56 expr: expr . '<' expr
   57     | expr . '>' expr
   58     | expr . EQUAL expr
   59     | expr . GE expr
   60     | expr . LE expr
   61     | expr . NE expr
   62     | expr . AND expr
   63     | expr . OR expr
   64     | NOT expr .
   65     | expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '/' expr
   68     | expr . '%' expr
   69     | expr . '*' expr

    $default  reduce using rule 64 (expr)


State 112

   56 expr: expr . '<' expr
   57     | expr . '>' expr
   58     | expr . EQUAL expr
   59     | expr . GE expr
   60     | expr . LE expr
   61     | expr . NE expr
   62     | expr . AND expr
   63     | expr . OR expr
   65     | expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '/' expr
   68     | expr . '%' expr
   69     | expr . '*' expr
   70     | '(' expr . ')'
   74     | '(' expr . ',' expr ')'

    EQUAL  shift, and go to state 113
    GE     shift, and go to state 114
    LE     shift, and go to state 115
    NE     shift, and go to state 116
    AND    shift, and go to state 117
    OR     shift, and go to state 118
    ','    shift, and go to state 139
    '<'    shift, and go to state 119
    '>'    shift, and go to state 120
    '+'    shift, and go to state 121
    '-'    shift, and go to state 122
    '*'    shift, and go to state 123
    '/'    shift, and go to state 124
    '%'    shift, and go to state 125
    ')'    shift, and go to state 140


State 113

   58 expr: expr EQUAL . expr

    NUM    shift, and go to state 92
    ID     shift, and go to state 93
    TRUE   shift, and go to state 94
    FALSE  shift, and go to state 95
    NOT    shift, and go to state 96
    '('    shift, and go to state 97

    expr  go to state 141


State 114

   59 expr: expr GE . expr

    NUM    shift, and go to state 92
    ID     shift, and go to state 93
    TRUE   shift, and go to state 94
    FALSE  shift, and go to state 95
    NOT    shift, and go to state 96
    '('    shift, and go to state 97

    expr  go to state 142


State 115

   60 expr: expr LE . expr

    NUM    shift, and go to state 92
    ID     shift, and go to state 93
    TRUE   shift, and go to state 94
    FALSE  shift, and go to state 95
    NOT    shift, and go to state 96
    '('    shift, and go to state 97

    expr  go to state 143


State 116

   61 expr: expr NE . expr

    NUM    shift, and go to state 92
    ID     shift, and go to state 93
    TRUE   shift, and go to state 94
    FALSE  shift, and go to state 95
    NOT    shift, and go to state 96
    '('    shift, and go to state 97

    expr  go to state 144


State 117

   62 expr: expr AND . expr

    NUM    shift, and go to state 92
    ID     shift, and go to state 93
    TRUE   shift, and go to state 94
    FALSE  shift, and go to state 95
    NOT    shift, and go to state 96
    '('    shift, and go to state 97

    expr  go to state 145


State 118

   63 expr: expr OR . expr

    NUM    shift, and go to state 92
    ID     shift, and go to state 93
    TRUE   shift, and go to state 94
    FALSE  shift, and go to state 95
    NOT    shift, and go to state 96
    '('    shift, and go to state 97

    expr  go to state 146


State 119

   56 expr: expr '<' . expr

    NUM    shift, and go to state 92
    ID     shift, and go to state 93
    TRUE   shift, and go to state 94
    FALSE  shift, and go to state 95
    NOT    shift, and go to state 96
    '('    shift, and go to state 97

    expr  go to state 147


State 120

   57 expr: expr '>' . expr

    NUM    shift, and go to state 92
    ID     shift, and go to state 93
    TRUE   shift, and go to state 94
    FALSE  shift, and go to state 95
    NOT    shift, and go to state 96
    '('    shift, and go to state 97

    expr  go to state 148


State 121

   65 expr: expr '+' . expr

    NUM    shift, and go to state 92
    ID     shift, and go to state 93
    TRUE   shift, and go to state 94
    FALSE  shift, and go to state 95
    NOT    shift, and go to state 96
    '('    shift, and go to state 97

    expr  go to state 149


State 122

   66 expr: expr '-' . expr

    NUM    shift, and go to state 92
    ID     shift, and go to state 93
    TRUE   shift, and go to state 94
    FALSE  shift, and go to state 95
    NOT    shift, and go to state 96
    '('    shift, and go to state 97

    expr  go to state 150


State 123

   69 expr: expr '*' . expr

    NUM    shift, and go to state 92
    ID     shift, and go to state 93
    TRUE   shift, and go to state 94
    FALSE  shift, and go to state 95
    NOT    shift, and go to state 96
    '('    shift, and go to state 97

    expr  go to state 151


State 124

   67 expr: expr '/' . expr

    NUM    shift, and go to state 92
    ID     shift, and go to state 93
    TRUE   shift, and go to state 94
    FALSE  shift, and go to state 95
    NOT    shift, and go to state 96
    '('    shift, and go to state 97

    expr  go to state 152


State 125

   68 expr: expr '%' . expr

    NUM    shift, and go to state 92
    ID     shift, and go to state 93
    TRUE   shift, and go to state 94
    FALSE  shift, and go to state 95
    NOT    shift, and go to state 96
    '('    shift, and go to state 97

    expr  go to state 153


State 126

   47 Stmt: ID '=' expr ';' .

    $default  reduce using rule 47 (Stmt)


State 127

   49 Stmt: ID '[' expr ']' . '=' expr ';'

    '='  shift, and go to state 154


State 128

   48 Stmt: ID '.' NUM '=' . expr ';'

    NUM    shift, and go to state 92
    ID     shift, and go to state 93
    TRUE   shift, and go to state 94
    FALSE  shift, and go to state 95
    NOT    shift, and go to state 96
    '('    shift, and go to state 97

    expr  go to state 155


State 129

   50 Stmt: READ '(' ID ')' . ';'

    ';'  shift, and go to state 156


State 130

   51 Stmt: READ '(' ID '[' . expr ']' ')' ';'

    NUM    shift, and go to state 92
    ID     shift, and go to state 93
    TRUE   shift, and go to state 94
    FALSE  shift, and go to state 95
    NOT    shift, and go to state 96
    '('    shift, and go to state 97

    expr  go to state 157


State 131

   52 Stmt: WRITE '(' expr ')' . ';'

    ';'  shift, and go to state 158


State 132

   44 Stmt: IF '(' expr ')' . THEN Slist ENDIF ';'
   45     | IF '(' expr ')' . THEN Slist ELSE Slist ENDIF ';'

    THEN  shift, and go to state 159


State 133

   46 Stmt: WHILE '(' expr ')' . DO Slist ENDWHILE ';'

    DO  shift, and go to state 160


State 134

   41 retstmt: RETURN expr ';' .

    $default  reduce using rule 41 (retstmt)


State 135

   53 exprlist: exprlist . ',' expr
   73 expr: ID '(' exprlist . ')'

    ','  shift, and go to state 161
    ')'  shift, and go to state 162


State 136

   54 exprlist: expr .
   56 expr: expr . '<' expr
   57     | expr . '>' expr
   58     | expr . EQUAL expr
   59     | expr . GE expr
   60     | expr . LE expr
   61     | expr . NE expr
   62     | expr . AND expr
   63     | expr . OR expr
   65     | expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '/' expr
   68     | expr . '%' expr
   69     | expr . '*' expr

    EQUAL  shift, and go to state 113
    GE     shift, and go to state 114
    LE     shift, and go to state 115
    NE     shift, and go to state 116
    AND    shift, and go to state 117
    OR     shift, and go to state 118
    '<'    shift, and go to state 119
    '>'    shift, and go to state 120
    '+'    shift, and go to state 121
    '-'    shift, and go to state 122
    '*'    shift, and go to state 123
    '/'    shift, and go to state 124
    '%'    shift, and go to state 125

    $default  reduce using rule 54 (exprlist)


State 137

   56 expr: expr . '<' expr
   57     | expr . '>' expr
   58     | expr . EQUAL expr
   59     | expr . GE expr
   60     | expr . LE expr
   61     | expr . NE expr
   62     | expr . AND expr
   63     | expr . OR expr
   65     | expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '/' expr
   68     | expr . '%' expr
   69     | expr . '*' expr
   75     | ID '[' expr . ']'

    EQUAL  shift, and go to state 113
    GE     shift, and go to state 114
    LE     shift, and go to state 115
    NE     shift, and go to state 116
    AND    shift, and go to state 117
    OR     shift, and go to state 118
    '<'    shift, and go to state 119
    '>'    shift, and go to state 120
    '+'    shift, and go to state 121
    '-'    shift, and go to state 122
    '*'    shift, and go to state 123
    '/'    shift, and go to state 124
    '%'    shift, and go to state 125
    ']'    shift, and go to state 163


State 138

   72 expr: ID '.' NUM .

    $default  reduce using rule 72 (expr)


State 139

   74 expr: '(' expr ',' . expr ')'

    NUM    shift, and go to state 92
    ID     shift, and go to state 93
    TRUE   shift, and go to state 94
    FALSE  shift, and go to state 95
    NOT    shift, and go to state 96
    '('    shift, and go to state 97

    expr  go to state 164


State 140

   70 expr: '(' expr ')' .

    $default  reduce using rule 70 (expr)


State 141

   56 expr: expr . '<' expr
   57     | expr . '>' expr
   58     | expr . EQUAL expr
   58     | expr EQUAL expr .
   59     | expr . GE expr
   60     | expr . LE expr
   61     | expr . NE expr
   62     | expr . AND expr
   63     | expr . OR expr
   65     | expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '/' expr
   68     | expr . '%' expr
   69     | expr . '*' expr

    GE   shift, and go to state 114
    LE   shift, and go to state 115
    '<'  shift, and go to state 119
    '>'  shift, and go to state 120
    '+'  shift, and go to state 121
    '-'  shift, and go to state 122
    '*'  shift, and go to state 123
    '/'  shift, and go to state 124
    '%'  shift, and go to state 125

    $default  reduce using rule 58 (expr)


State 142

   56 expr: expr . '<' expr
   57     | expr . '>' expr
   58     | expr . EQUAL expr
   59     | expr . GE expr
   59     | expr GE expr .
   60     | expr . LE expr
   61     | expr . NE expr
   62     | expr . AND expr
   63     | expr . OR expr
   65     | expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '/' expr
   68     | expr . '%' expr
   69     | expr . '*' expr

    '+'  shift, and go to state 121
    '-'  shift, and go to state 122
    '*'  shift, and go to state 123
    '/'  shift, and go to state 124
    '%'  shift, and go to state 125

    $default  reduce using rule 59 (expr)


State 143

   56 expr: expr . '<' expr
   57     | expr . '>' expr
   58     | expr . EQUAL expr
   59     | expr . GE expr
   60     | expr . LE expr
   60     | expr LE expr .
   61     | expr . NE expr
   62     | expr . AND expr
   63     | expr . OR expr
   65     | expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '/' expr
   68     | expr . '%' expr
   69     | expr . '*' expr

    '+'  shift, and go to state 121
    '-'  shift, and go to state 122
    '*'  shift, and go to state 123
    '/'  shift, and go to state 124
    '%'  shift, and go to state 125

    $default  reduce using rule 60 (expr)


State 144

   56 expr: expr . '<' expr
   57     | expr . '>' expr
   58     | expr . EQUAL expr
   59     | expr . GE expr
   60     | expr . LE expr
   61     | expr . NE expr
   61     | expr NE expr .
   62     | expr . AND expr
   63     | expr . OR expr
   65     | expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '/' expr
   68     | expr . '%' expr
   69     | expr . '*' expr

    GE   shift, and go to state 114
    LE   shift, and go to state 115
    '<'  shift, and go to state 119
    '>'  shift, and go to state 120
    '+'  shift, and go to state 121
    '-'  shift, and go to state 122
    '*'  shift, and go to state 123
    '/'  shift, and go to state 124
    '%'  shift, and go to state 125

    $default  reduce using rule 61 (expr)


State 145

   56 expr: expr . '<' expr
   57     | expr . '>' expr
   58     | expr . EQUAL expr
   59     | expr . GE expr
   60     | expr . LE expr
   61     | expr . NE expr
   62     | expr . AND expr
   62     | expr AND expr .
   63     | expr . OR expr
   65     | expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '/' expr
   68     | expr . '%' expr
   69     | expr . '*' expr

    EQUAL  shift, and go to state 113
    GE     shift, and go to state 114
    LE     shift, and go to state 115
    NE     shift, and go to state 116
    '<'    shift, and go to state 119
    '>'    shift, and go to state 120
    '+'    shift, and go to state 121
    '-'    shift, and go to state 122
    '*'    shift, and go to state 123
    '/'    shift, and go to state 124
    '%'    shift, and go to state 125

    $default  reduce using rule 62 (expr)


State 146

   56 expr: expr . '<' expr
   57     | expr . '>' expr
   58     | expr . EQUAL expr
   59     | expr . GE expr
   60     | expr . LE expr
   61     | expr . NE expr
   62     | expr . AND expr
   63     | expr . OR expr
   63     | expr OR expr .
   65     | expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '/' expr
   68     | expr . '%' expr
   69     | expr . '*' expr

    EQUAL  shift, and go to state 113
    GE     shift, and go to state 114
    LE     shift, and go to state 115
    NE     shift, and go to state 116
    AND    shift, and go to state 117
    '<'    shift, and go to state 119
    '>'    shift, and go to state 120
    '+'    shift, and go to state 121
    '-'    shift, and go to state 122
    '*'    shift, and go to state 123
    '/'    shift, and go to state 124
    '%'    shift, and go to state 125

    $default  reduce using rule 63 (expr)


State 147

   56 expr: expr . '<' expr
   56     | expr '<' expr .
   57     | expr . '>' expr
   58     | expr . EQUAL expr
   59     | expr . GE expr
   60     | expr . LE expr
   61     | expr . NE expr
   62     | expr . AND expr
   63     | expr . OR expr
   65     | expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '/' expr
   68     | expr . '%' expr
   69     | expr . '*' expr

    '+'  shift, and go to state 121
    '-'  shift, and go to state 122
    '*'  shift, and go to state 123
    '/'  shift, and go to state 124
    '%'  shift, and go to state 125

    $default  reduce using rule 56 (expr)


State 148

   56 expr: expr . '<' expr
   57     | expr . '>' expr
   57     | expr '>' expr .
   58     | expr . EQUAL expr
   59     | expr . GE expr
   60     | expr . LE expr
   61     | expr . NE expr
   62     | expr . AND expr
   63     | expr . OR expr
   65     | expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '/' expr
   68     | expr . '%' expr
   69     | expr . '*' expr

    '+'  shift, and go to state 121
    '-'  shift, and go to state 122
    '*'  shift, and go to state 123
    '/'  shift, and go to state 124
    '%'  shift, and go to state 125

    $default  reduce using rule 57 (expr)


State 149

   56 expr: expr . '<' expr
   57     | expr . '>' expr
   58     | expr . EQUAL expr
   59     | expr . GE expr
   60     | expr . LE expr
   61     | expr . NE expr
   62     | expr . AND expr
   63     | expr . OR expr
   65     | expr . '+' expr
   65     | expr '+' expr .
   66     | expr . '-' expr
   67     | expr . '/' expr
   68     | expr . '%' expr
   69     | expr . '*' expr

    '*'  shift, and go to state 123
    '/'  shift, and go to state 124
    '%'  shift, and go to state 125

    $default  reduce using rule 65 (expr)


State 150

   56 expr: expr . '<' expr
   57     | expr . '>' expr
   58     | expr . EQUAL expr
   59     | expr . GE expr
   60     | expr . LE expr
   61     | expr . NE expr
   62     | expr . AND expr
   63     | expr . OR expr
   65     | expr . '+' expr
   66     | expr . '-' expr
   66     | expr '-' expr .
   67     | expr . '/' expr
   68     | expr . '%' expr
   69     | expr . '*' expr

    '*'  shift, and go to state 123
    '/'  shift, and go to state 124
    '%'  shift, and go to state 125

    $default  reduce using rule 66 (expr)


State 151

   56 expr: expr . '<' expr
   57     | expr . '>' expr
   58     | expr . EQUAL expr
   59     | expr . GE expr
   60     | expr . LE expr
   61     | expr . NE expr
   62     | expr . AND expr
   63     | expr . OR expr
   65     | expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '/' expr
   68     | expr . '%' expr
   69     | expr . '*' expr
   69     | expr '*' expr .

    $default  reduce using rule 69 (expr)


State 152

   56 expr: expr . '<' expr
   57     | expr . '>' expr
   58     | expr . EQUAL expr
   59     | expr . GE expr
   60     | expr . LE expr
   61     | expr . NE expr
   62     | expr . AND expr
   63     | expr . OR expr
   65     | expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '/' expr
   67     | expr '/' expr .
   68     | expr . '%' expr
   69     | expr . '*' expr

    $default  reduce using rule 67 (expr)


State 153

   56 expr: expr . '<' expr
   57     | expr . '>' expr
   58     | expr . EQUAL expr
   59     | expr . GE expr
   60     | expr . LE expr
   61     | expr . NE expr
   62     | expr . AND expr
   63     | expr . OR expr
   65     | expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '/' expr
   68     | expr . '%' expr
   68     | expr '%' expr .
   69     | expr . '*' expr

    $default  reduce using rule 68 (expr)


State 154

   49 Stmt: ID '[' expr ']' '=' . expr ';'

    NUM    shift, and go to state 92
    ID     shift, and go to state 93
    TRUE   shift, and go to state 94
    FALSE  shift, and go to state 95
    NOT    shift, and go to state 96
    '('    shift, and go to state 97

    expr  go to state 165


State 155

   48 Stmt: ID '.' NUM '=' expr . ';'
   56 expr: expr . '<' expr
   57     | expr . '>' expr
   58     | expr . EQUAL expr
   59     | expr . GE expr
   60     | expr . LE expr
   61     | expr . NE expr
   62     | expr . AND expr
   63     | expr . OR expr
   65     | expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '/' expr
   68     | expr . '%' expr
   69     | expr . '*' expr

    EQUAL  shift, and go to state 113
    GE     shift, and go to state 114
    LE     shift, and go to state 115
    NE     shift, and go to state 116
    AND    shift, and go to state 117
    OR     shift, and go to state 118
    '<'    shift, and go to state 119
    '>'    shift, and go to state 120
    '+'    shift, and go to state 121
    '-'    shift, and go to state 122
    '*'    shift, and go to state 123
    '/'    shift, and go to state 124
    '%'    shift, and go to state 125
    ';'    shift, and go to state 166


State 156

   50 Stmt: READ '(' ID ')' ';' .

    $default  reduce using rule 50 (Stmt)


State 157

   51 Stmt: READ '(' ID '[' expr . ']' ')' ';'
   56 expr: expr . '<' expr
   57     | expr . '>' expr
   58     | expr . EQUAL expr
   59     | expr . GE expr
   60     | expr . LE expr
   61     | expr . NE expr
   62     | expr . AND expr
   63     | expr . OR expr
   65     | expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '/' expr
   68     | expr . '%' expr
   69     | expr . '*' expr

    EQUAL  shift, and go to state 113
    GE     shift, and go to state 114
    LE     shift, and go to state 115
    NE     shift, and go to state 116
    AND    shift, and go to state 117
    OR     shift, and go to state 118
    '<'    shift, and go to state 119
    '>'    shift, and go to state 120
    '+'    shift, and go to state 121
    '-'    shift, and go to state 122
    '*'    shift, and go to state 123
    '/'    shift, and go to state 124
    '%'    shift, and go to state 125
    ']'    shift, and go to state 167


State 158

   52 Stmt: WRITE '(' expr ')' ';' .

    $default  reduce using rule 52 (Stmt)


State 159

   44 Stmt: IF '(' expr ')' THEN . Slist ENDIF ';'
   45     | IF '(' expr ')' THEN . Slist ELSE Slist ENDIF ';'

    ID     shift, and go to state 69
    READ   shift, and go to state 70
    WRITE  shift, and go to state 71
    IF     shift, and go to state 72
    WHILE  shift, and go to state 73

    Slist  go to state 168
    Stmt   go to state 75


State 160

   46 Stmt: WHILE '(' expr ')' DO . Slist ENDWHILE ';'

    ID     shift, and go to state 69
    READ   shift, and go to state 70
    WRITE  shift, and go to state 71
    IF     shift, and go to state 72
    WHILE  shift, and go to state 73

    Slist  go to state 169
    Stmt   go to state 75


State 161

   53 exprlist: exprlist ',' . expr

    NUM    shift, and go to state 92
    ID     shift, and go to state 93
    TRUE   shift, and go to state 94
    FALSE  shift, and go to state 95
    NOT    shift, and go to state 96
    '('    shift, and go to state 97

    expr  go to state 170


State 162

   73 expr: ID '(' exprlist ')' .

    $default  reduce using rule 73 (expr)


State 163

   75 expr: ID '[' expr ']' .

    $default  reduce using rule 75 (expr)


State 164

   56 expr: expr . '<' expr
   57     | expr . '>' expr
   58     | expr . EQUAL expr
   59     | expr . GE expr
   60     | expr . LE expr
   61     | expr . NE expr
   62     | expr . AND expr
   63     | expr . OR expr
   65     | expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '/' expr
   68     | expr . '%' expr
   69     | expr . '*' expr
   74     | '(' expr ',' expr . ')'

    EQUAL  shift, and go to state 113
    GE     shift, and go to state 114
    LE     shift, and go to state 115
    NE     shift, and go to state 116
    AND    shift, and go to state 117
    OR     shift, and go to state 118
    '<'    shift, and go to state 119
    '>'    shift, and go to state 120
    '+'    shift, and go to state 121
    '-'    shift, and go to state 122
    '*'    shift, and go to state 123
    '/'    shift, and go to state 124
    '%'    shift, and go to state 125
    ')'    shift, and go to state 171


State 165

   49 Stmt: ID '[' expr ']' '=' expr . ';'
   56 expr: expr . '<' expr
   57     | expr . '>' expr
   58     | expr . EQUAL expr
   59     | expr . GE expr
   60     | expr . LE expr
   61     | expr . NE expr
   62     | expr . AND expr
   63     | expr . OR expr
   65     | expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '/' expr
   68     | expr . '%' expr
   69     | expr . '*' expr

    EQUAL  shift, and go to state 113
    GE     shift, and go to state 114
    LE     shift, and go to state 115
    NE     shift, and go to state 116
    AND    shift, and go to state 117
    OR     shift, and go to state 118
    '<'    shift, and go to state 119
    '>'    shift, and go to state 120
    '+'    shift, and go to state 121
    '-'    shift, and go to state 122
    '*'    shift, and go to state 123
    '/'    shift, and go to state 124
    '%'    shift, and go to state 125
    ';'    shift, and go to state 172


State 166

   48 Stmt: ID '.' NUM '=' expr ';' .

    $default  reduce using rule 48 (Stmt)


State 167

   51 Stmt: READ '(' ID '[' expr ']' . ')' ';'

    ')'  shift, and go to state 173


State 168

   42 Slist: Slist . Stmt
   44 Stmt: IF '(' expr ')' THEN Slist . ENDIF ';'
   45     | IF '(' expr ')' THEN Slist . ELSE Slist ENDIF ';'

    ID     shift, and go to state 69
    READ   shift, and go to state 70
    WRITE  shift, and go to state 71
    IF     shift, and go to state 72
    ELSE   shift, and go to state 174
    ENDIF  shift, and go to state 175
    WHILE  shift, and go to state 73

    Stmt  go to state 89


State 169

   42 Slist: Slist . Stmt
   46 Stmt: WHILE '(' expr ')' DO Slist . ENDWHILE ';'

    ID        shift, and go to state 69
    READ      shift, and go to state 70
    WRITE     shift, and go to state 71
    IF        shift, and go to state 72
    WHILE     shift, and go to state 73
    ENDWHILE  shift, and go to state 176

    Stmt  go to state 89


State 170

   53 exprlist: exprlist ',' expr .
   56 expr: expr . '<' expr
   57     | expr . '>' expr
   58     | expr . EQUAL expr
   59     | expr . GE expr
   60     | expr . LE expr
   61     | expr . NE expr
   62     | expr . AND expr
   63     | expr . OR expr
   65     | expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '/' expr
   68     | expr . '%' expr
   69     | expr . '*' expr

    EQUAL  shift, and go to state 113
    GE     shift, and go to state 114
    LE     shift, and go to state 115
    NE     shift, and go to state 116
    AND    shift, and go to state 117
    OR     shift, and go to state 118
    '<'    shift, and go to state 119
    '>'    shift, and go to state 120
    '+'    shift, and go to state 121
    '-'    shift, and go to state 122
    '*'    shift, and go to state 123
    '/'    shift, and go to state 124
    '%'    shift, and go to state 125

    $default  reduce using rule 53 (exprlist)


State 171

   74 expr: '(' expr ',' expr ')' .

    $default  reduce using rule 74 (expr)


State 172

   49 Stmt: ID '[' expr ']' '=' expr ';' .

    $default  reduce using rule 49 (Stmt)


State 173

   51 Stmt: READ '(' ID '[' expr ']' ')' . ';'

    ';'  shift, and go to state 177


State 174

   45 Stmt: IF '(' expr ')' THEN Slist ELSE . Slist ENDIF ';'

    ID     shift, and go to state 69
    READ   shift, and go to state 70
    WRITE  shift, and go to state 71
    IF     shift, and go to state 72
    WHILE  shift, and go to state 73

    Slist  go to state 178
    Stmt   go to state 75


State 175

   44 Stmt: IF '(' expr ')' THEN Slist ENDIF . ';'

    ';'  shift, and go to state 179


State 176

   46 Stmt: WHILE '(' expr ')' DO Slist ENDWHILE . ';'

    ';'  shift, and go to state 180


State 177

   51 Stmt: READ '(' ID '[' expr ']' ')' ';' .

    $default  reduce using rule 51 (Stmt)


State 178

   42 Slist: Slist . Stmt
   45 Stmt: IF '(' expr ')' THEN Slist ELSE Slist . ENDIF ';'

    ID     shift, and go to state 69
    READ   shift, and go to state 70
    WRITE  shift, and go to state 71
    IF     shift, and go to state 72
    ENDIF  shift, and go to state 181
    WHILE  shift, and go to state 73

    Stmt  go to state 89


State 179

   44 Stmt: IF '(' expr ')' THEN Slist ENDIF ';' .

    $default  reduce using rule 44 (Stmt)


State 180

   46 Stmt: WHILE '(' expr ')' DO Slist ENDWHILE ';' .

    $default  reduce using rule 46 (Stmt)


State 181

   45 Stmt: IF '(' expr ')' THEN Slist ELSE Slist ENDIF . ';'

    ';'  shift, and go to state 182


State 182

   45 Stmt: IF '(' expr ')' THEN Slist ELSE Slist ENDIF ';' .

    $default  reduce using rule 45 (Stmt)
